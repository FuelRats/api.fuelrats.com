name: Test

on:
  pull_request:
    branches: [ develop, beta, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read node version (package.json)
        uses: culshaw/read-package-node-version-actions@v2
        id: package-node-version

      - name: Use Node.js (package.json)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.package-node-version.outputs.version }}"

      - name: Read `yarn cache dir`
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        uses: wearerequired/lint-action@v1.6.0
        with:
          github_token: ${{ secrets.github_token }}
          eslint: true
          eslint_args: "--max-warnings 0"
          eslint_dir: src/

  build:
    runs-on: ubuntu-latest
    name: Build Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read node version (package.json)
        uses: culshaw/read-package-node-version-actions@v2
        id: package-node-version

      - name: Use Node.js (package.json)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.package-node-version.outputs.version }}"

      - name: Read `yarn cache dir`
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          NODE_ENV: production
