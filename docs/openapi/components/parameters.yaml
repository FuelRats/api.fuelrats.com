# Common parameters used across multiple endpoints

PageOffset:
  name: page[offset]
  in: query
  description: Number of resources to skip for pagination
  schema:
    type: integer
    minimum: 0
    default: 0
  example: 20

PageLimit:
  name: page[limit]
  in: query
  description: Maximum number of resources to return
  schema:
    type: integer
    minimum: 1
    maximum: 100
    default: 20
  example: 20

Sort:
  name: sort
  in: query
  description: |
    Sort resources by field(s). Use comma-separated values for multiple fields.
    Prefix with `-` for descending order.
  schema:
    type: string
  examples:
    ascending:
      value: "createdAt"
      summary: Sort by creation date (ascending)
    descending:
      value: "-createdAt"
      summary: Sort by creation date (descending)
    multiple:
      value: "name,-createdAt"
      summary: Sort by name ascending, then creation date descending

Include:
  name: include
  in: query
  description: |
    Include related resources in the response. Use comma-separated values for multiple includes.
  schema:
    type: string
  example: "rats,groups"

Fields:
  name: fields
  in: query
  description: |
    Sparse fieldsets - limit the fields returned for each resource type.
    Format: fields[TYPE]=field1,field2
  schema:
    type: object
    additionalProperties:
      type: string
  style: deepObject
  explode: true
  example:
    users: "email,status,createdAt"
    rats: "name,platform"