openapi: 3.0.3
info:
  title: FuelRats API
  version: 3.1.0
  description: |
    The official API for the FuelRats rescue coordination system.

    This API follows the [JSON:API specification](https://jsonapi.org/) for consistent resource handling.

    ## Authentication

    The API supports multiple OAuth2 authentication flows:

    ### Authorization Code Grant (Recommended)
    The most secure method for server-side and native desktop applications:
    1. Redirect user to `/oauth2/authorize` with client_id, redirect_uri, and state
    2. User authorizes your application
    3. Exchange authorization code for access token at `/oauth2/token`
    4. Use access token in `Authorization: Bearer <token>` header

    ### Implicit Grant 
    For client-side web applications (less secure):
    1. Redirect user to `/oauth2/authorize` with response_type=token
    2. Access token returned directly in redirect URL fragment

    ### Resource Owner Password Credentials
    Only available to first-party FuelRats applications:
    - Direct username/password authentication
    - Requires client to be whitelisted

    ### WebSocket Authentication
    For real-time communication, append bearer token to WebSocket URL:
    ```
    wss://api.fuelrats.com/?bearer=<your_token_here>
    ```

    ## Permission Scopes

    API permissions follow the format: `resource.read/write(.me)`

    - **resource**: Plural resource type (users, rats, rescues, etc.)
    - **read**: View records
    - **write**: Create/update/delete records  
    - **.me**: Restrict to user's own associated records only

    **Examples:**
    - `rescues.read.me` - View only your assigned rescues
    - `rats.write` - Modify any commander record
    - `users.read` - View any user information

    ## Filtering & Query Parameters

    Most list endpoints support advanced filtering using JSON query objects:

    ### Filter Operators:
    - **Comparison**: `gt`, `gte`, `lt`, `lte`, `eq`, `ne`
    - **Text**: `like`, `iLike`, `substring`, `startsWith`, `regexp`
    - **Logical**: `and`, `or`, `not`
    - **Arrays**: `contains`, `overlap`, `contained`

    ### Example Filter:
    ```json
    {
      "and": [
        { "name": { "startsWith": "Commander" } },
        { "rescueCount": { "gt": 10 } }
      ]
    }
    ```

    URL encode the filter object and pass as `filter` query parameter.

    ## WebSocket Real-time API

    Connect to `wss://api.fuelrats.com/` with protocol `FR-JSONAPI-WS`:

    ### Request Format:
    ```javascript
    [state, endpoint, query, body]
    ```

    ### Response Format:
    ```javascript
    [state, status, body]
    ```

    ### Event Subscription:
    Subscribe to real-time events by sending:
    ```javascript
    ["subscribe", "events", "subscribe", {}]
    ```

    Events follow format: `[event, sender, resourceId, data]`

    ## Error Handling

    All errors follow JSON:API error object format with additional metadata:

    ```json
    {
      "errors": [{
        "id": "unique-error-id",
        "code": "error_code", 
        "status": "400",
        "title": "Error Title",
        "detail": "Detailed error description",
        "source": {
          "pointer": "/data/attributes/field"
        }
      }]
    }
    ```

    Use the `id` field for error tracking and `code` field for programmatic error handling.
  contact:
    name: FuelRats Support
    url: 'https://fuelrats.com'
    email: support@fuelrats.com
  license:
    name: BSD-3-Clause
    url: 'https://github.com/FuelRats/api.fuelrats.com/blob/main/LICENSE'
servers:
  - url: 'https://api.fuelrats.com'
    description: Production server
  - url: 'https://beta-api.fuelrats.com'
    description: Beta server
tags:
  - name: registration
    description: New user account registration
  - name: verifications
    description: Email address verification
  - name: resets
    description: Password reset functionality
  - name: users
    description: User account management
  - name: rats
    description: Commander (Rat) management
  - name: rescues
    description: Rescue case management
  - name: nicknames
    description: IRC nickname registration
  - name: groups
    description: Permission group management
  - name: oauth2
    description: OAuth2 authentication
  - name: passkeys
    description: WebAuthn/Passkey authentication
  - name: decals
    description: Decal award management
  - name: events
    description: Real-time events and notifications
  - name: web-push
    description: Web push notifications and subscriptions
  - name: websockets
    description: Real-time WebSocket API communication
  - name: statistics
    description: Platform statistics and leaderboards
  - name: version
    description: API version information
paths:
  /register:
    post:
      tags:
        - registration
      summary: Register new account
      description: |
        Register a new user account with an associated rat (commander) and IRC nickname.

        This endpoint:
        - Creates a new user account
        - Creates the first rat (commander) for the user
        - Registers an IRC nickname
        - Sends a verification email
        - Creates a verified session
        - Notifies moderators of the registration

        **Important requirements:**
        - User-Agent header is required
        - X-Fingerprint header is required (unique device identifier)
        - The commander name cannot have an active rescue case
        - Email and commander name must be unique
      parameters:
        - name: User-Agent
          in: header
          required: true
          description: User agent string identifying the client application
          schema:
            type: string
            example: MyApp/1.0 (Platform)
        - name: X-Fingerprint
          in: header
          required: true
          description: Unique device/client fingerprint for security
          schema:
            type: string
            example: abc123def456ghi789
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - registrations
                    attributes:
                      type: object
                      required:
                        - email
                        - password
                        - name
                        - platform
                        - nickname
                      properties:
                        email:
                          type: string
                          format: email
                          description: User's email address (must be unique)
                        password:
                          type: string
                          minLength: 8
                          description: User's password (will be hashed)
                        name:
                          type: string
                          minLength: 3
                          maxLength: 64
                          description: Commander (rat) name in Elite Dangerous (must be unique per platform)
                        platform:
                          type: string
                          enum:
                            - pc
                            - xb
                            - ps
                          description: Gaming platform
                        nickname:
                          type: string
                          pattern: '^[A-Za-z_\\`\[\]{}]([A-Za-z0-9_\\`\[\]{}\-|]{1,29})?$'
                          description: IRC nickname to register
                        expansion:
                          type: string
                          enum:
                            - horizons3
                            - horizons4
                            - odyssey
                          default: horizons3
                          description: Elite Dangerous expansion/version
            example:
              data:
                type: registrations
                attributes:
                  email: newpilot@example.com
                  password: securepassword123
                  name: NewRescuePilot
                  platform: pc
                  nickname: 'NewRescuePilot[PC]'
                  expansion: odyssey
      responses:
        '201':
          description: |
            Registration successful. User account created with verified session.
            A verification email has been sent and moderators have been notified.
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '400':
          description: Bad Request - Missing required headers or invalid request format
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_user_agent:
                  value:
                    errors:
                      - status: '400'
                        title: Bad Request
                        detail: User-Agent header is required
                        source:
                          parameter: User-Agent
                missing_fingerprint:
                  value:
                    errors:
                      - status: '400'
                        title: Bad Request
                        detail: X-Fingerprint header is required
                        source:
                          parameter: X-Fingerprint
        '403':
          description: Forbidden - Commander has an active rescue case
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '403'
                    title: Forbidden
                    detail: 'Registration rejected: commander has an active rescue case'
                    source:
                      pointer: /data/attributes/name
        '409':
          description: Conflict - Email or commander name already exists
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                email_exists:
                  value:
                    errors:
                      - status: '409'
                        title: Conflict
                        detail: An account with this email already exists
                        source:
                          pointer: /data/attributes/email
                commander_exists:
                  value:
                    errors:
                      - status: '409'
                        title: Conflict
                        detail: A commander with this name already exists on this platform
                        source:
                          pointer: /data/attributes/name
        '422':
          description: Unprocessable Entity - Invalid data format or values
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_platform:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: 'Invalid platform. Must be one of: pc, xb, ps'
                        source:
                          pointer: /data/attributes/platform
                invalid_email:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: Invalid email format
                        source:
                          pointer: /data/attributes/email
                invalid_nickname:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: Invalid IRC nickname format
                        source:
                          pointer: /data/attributes/nickname
  /verifications:
    post:
      tags:
        - verifications
      summary: Request email verification
      description: |
        Request a new email verification link to be sent to verify an account.

        This endpoint:
        - Validates that the email exists in the system
        - Checks that the account is not already verified
        - Generates a secure verification token (24-hour expiration)
        - Sends a verification email with the token
        - Destroys any existing verification tokens for the user
        - Always returns success to prevent email enumeration
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - verifications
                    attributes:
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          format: email
                          description: Email address of the account to verify
            example:
              data:
                type: verifications
                attributes:
                  email: user@example.com
      responses:
        '200':
          description: |
            Verification request processed successfully.
            Note: Always returns success regardless of whether the email exists to prevent enumeration attacks.
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '409':
          description: Account is already verified
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '409'
                    title: Conflict
                    detail: Account is already verified
                    source:
                      pointer: /data/attributes/email
        '422':
          description: Invalid email address format
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '422'
                    title: Validation Error
                    detail: Invalid email address format
                    source:
                      pointer: /data/attributes/email
  '/verifications/{token}':
    get:
      tags:
        - verifications
      summary: Verify account with token
      description: |
        Use a verification token to verify a user's email address and activate their account.

        This endpoint:
        - Validates the verification token
        - Adds the user to the 'verified' group
        - Updates IRC permissions for the user
        - Destroys the verification token after use
        - Enables full access to the FuelRats system
      parameters:
        - name: token
          in: path
          required: true
          description: Email verification token from the verification email
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{32}$'
            example: abcd1234efgh5678ijkl9012mnop3456
      responses:
        '200':
          description: Account verified successfully
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '404':
          description: Verification token not found or has expired
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '404'
                    title: Not Found
                    detail: Verification token not found or has expired
                    source:
                      parameter: token
        '500':
          description: Internal server error - verification group not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '500'
                    title: Internal Server Error
                    detail: 'System configuration error: verification group not found'
  /resets:
    post:
      tags:
        - resets
      summary: Request password reset
      description: |
        Request a password reset link to be sent via email.

        This endpoint:
        - Validates the email address
        - Generates a secure reset token
        - Sends a password reset email if the account exists
        - Always returns success to prevent email enumeration
        - Logs the request for security monitoring
        - Destroys any existing reset tokens for the user
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - resets
                    attributes:
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          format: email
                          description: Email address of the account to reset
            example:
              data:
                type: resets
                attributes:
                  email: user@example.com
      responses:
        '200':
          description: |
            Reset request processed successfully. 
            Note: Always returns success regardless of whether the email exists to prevent enumeration attacks.
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/resets/{token}':
    get:
      $ref: ./routes/resets.yaml#/resets_validate
    post:
      $ref: ./routes/resets.yaml#/resets_execute
  /users:
    get:
      tags:
        - users
      summary: List users
      description: |
        Search and list users with optional filtering and pagination

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of users
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/usersUserCollection'
              examples:
                successful_response:
                  summary: List of users with relationships
                  description: Example response showing paginated list of users with their associated rats and groups
                  value:
                    data:
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                        attributes:
                          email: user1@example.com
                          status: active
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                        relationships:
                          rats:
                            data:
                              - type: rats
                                id: 660e8400-e29b-41d4-a716-446655440001
                            links:
                              self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                              related: /users/550e8400-e29b-41d4-a716-446655440000/rats
                          groups:
                            data:
                              - type: groups
                                id: 770e8400-e29b-41d4-a716-446655440002
                            links:
                              self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                              related: /users/550e8400-e29b-41d4-a716-446655440000/groups
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440003
                        attributes:
                          email: user2@example.com
                          status: active
                          createdAt: '2023-01-02T00:00:00.000Z'
                          updatedAt: '2023-01-02T00:00:00.000Z'
                        relationships:
                          rats:
                            data: []
                            links:
                              self: /users/550e8400-e29b-41d4-a716-446655440003/relationships/rats
                              related: /users/550e8400-e29b-41d4-a716-446655440003/rats
                          groups:
                            data: []
                            links:
                              self: /users/550e8400-e29b-41d4-a716-446655440003/relationships/groups
                              related: /users/550e8400-e29b-41d4-a716-446655440003/groups
                    included:
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                        attributes:
                          name: SpacePilot42
                          platform: pc
                          expansion: odyssey
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                      - type: groups
                        id: 770e8400-e29b-41d4-a716-446655440002
                        attributes:
                          name: Standard Users
                          vhost: null
                          isAdministrator: false
                          priority: 0
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 42
                    links:
                      self: '/users?page[offset]=0&page[limit]=20'
                      first: '/users?page[offset]=0&page[limit]=20'
                      last: '/users?page[offset]=40&page[limit]=20'
                      next: '/users?page[offset]=20&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - users
      summary: Create user
      description: |
        Create a new user account

        **Required Permission:** `users.write`
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          format: email
                        data:
                          type: object
      responses:
        '201':
          description: User created successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/usersUserDocument'
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                  attributes:
                    email: newuser@example.com
                    status: active
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-01-15T10:30:00.000Z'
                  relationships:
                    rats:
                      data: []
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                        related: /users/550e8400-e29b-41d4-a716-446655440000/rats
                    groups:
                      data: []
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                        related: /users/550e8400-e29b-41d4-a716-446655440000/groups
                included: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/users/{id}':
    get:
      tags:
        - users
      summary: Get user by ID
      description: |
        Retrieve a specific user by their ID

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: User details
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/usersUserDocument'
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                  attributes:
                    email: user@example.com
                    status: active
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-01-01T00:00:00.000Z'
                  relationships:
                    rats:
                      data:
                        - type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                        related: /users/550e8400-e29b-41d4-a716-446655440000/rats
                    groups:
                      data:
                        - type: groups
                          id: 770e8400-e29b-41d4-a716-446655440002
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                        related: /users/550e8400-e29b-41d4-a716-446655440000/groups
                included:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: SpacePilot42
                      platform: pc
                      expansion: odyssey
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
                  - type: groups
                    id: 770e8400-e29b-41d4-a716-446655440002
                    attributes:
                      name: Standard Users
                      vhost: null
                      isAdministrator: false
                      priority: 0
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - users
      summary: Update user
      description: |
        Update an existing user

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if updating own account)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          format: email
                        data:
                          type: object
                    relationships:
                      type: object
                      properties:
                        rats:
                          type: object
                          properties:
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - rats
                                  id:
                                    type: string
                                    format: uuid
                        groups:
                          type: object
                          properties:
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - groups
                                  id:
                                    type: string
                                    format: uuid
      responses:
        '200':
          description: User updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/usersUserDocument'
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                  attributes:
                    email: updated.user@example.com
                    status: active
                    data:
                      preferences:
                        theme: dark
                        notifications: true
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-03-01T16:30:00.000Z'
                  relationships:
                    rats:
                      data:
                        - type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                        related: /users/550e8400-e29b-41d4-a716-446655440000/rats
                    groups:
                      data:
                        - type: groups
                          id: 770e8400-e29b-41d4-a716-446655440002
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                        related: /users/550e8400-e29b-41d4-a716-446655440000/groups
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - users
      summary: Delete user
      description: |
        Delete a user account

        **Required Permission:** `users.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /profile:
    get:
      tags:
        - users
      summary: Get current user profile
      description: |
        Retrieve the profile of the currently authenticated user

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Current user's profile
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/usersUserDocument'
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                  attributes:
                    email: current.user@example.com
                    status: active
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-01-01T00:00:00.000Z'
                  relationships:
                    rats:
                      data:
                        - type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                        related: /users/550e8400-e29b-41d4-a716-446655440000/rats
                    groups:
                      data:
                        - type: groups
                          id: 770e8400-e29b-41d4-a716-446655440002
                      links:
                        self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                        related: /users/550e8400-e29b-41d4-a716-446655440000/groups
                included:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: SpacePilot42
                      platform: pc
                      expansion: odyssey
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
                  - type: groups
                    id: 770e8400-e29b-41d4-a716-446655440002
                    attributes:
                      name: Standard Users
                      vhost: null
                      isAdministrator: false
                      priority: 0
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/users/{id}/certificate':
    get:
      tags:
        - users
      summary: Get user certificate
      description: |
        Generate and retrieve an IRC client certificate for the user

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if accessing own certificate)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: IRC client certificate
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Attachment filename
              schema:
                type: string
                example: attachment; filename="FuelRats-IRC.p12"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/users/{id}/decals':
    post:
      tags:
        - users
      summary: Award decal to user
      description: |
        Award a decal to a user

        **Required Permission:** `decals.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - decals
                    attributes:
                      type: object
                      required:
                        - type
                      properties:
                        type:
                          type: string
                          enum:
                            - rescue
                            - epic
                            - thisisfine
                            - anniversary
                          description: Type of decal to award
                        notes:
                          type: string
                          description: Additional notes about the decal award
      responses:
        '201':
          description: Decal awarded successfully
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - decals
                      id:
                        type: string
                        format: uuid
                      attributes:
                        type: object
                        properties:
                          type:
                            type: string
                          notes:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
              example:
                data:
                  type: decals
                  id: 220e8400-e29b-41d4-a716-446655440005
                  attributes:
                    code: RESCUE-2023-055
                    type: rescue
                    notes: Awarded for exceptional rescue performance
                    createdAt: '2023-03-01T18:00:00.000Z'
                    updatedAt: '2023-03-01T18:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440005/relationships/user
                        related: /decals/220e8400-e29b-41d4-a716-446655440005/user
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/users/{id}/relationships/rats':
    get:
      tags:
        - users
      summary: Get user's rats relationship
      description: |
        Retrieve the relationship data for a user's rats

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User's rats relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - rats
                        id:
                          type: string
                          format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440002
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440003
                links:
                  self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/rats
                  related: /users/550e8400-e29b-41d4-a716-446655440000/rats
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - users
      summary: Update user's rats relationship
      description: |
        Update the relationship between a user and their rats

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if updating own rats)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      tags:
        - users
      summary: Add rats to user relationship
      description: |
        Add rats to a user's rats relationship

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if updating own rats)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Rats added to relationship successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - users
      summary: Remove rats from user relationship
      description: |
        Remove rats from a user's rats relationship

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if updating own rats)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Rats removed from relationship successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/users/{id}/relationships/groups':
    get:
      tags:
        - users
      summary: Get user's groups relationship
      description: |
        Retrieve the relationship data for a user's groups

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User's groups relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - groups
                        id:
                          type: string
                          format: uuid
              example:
                data:
                  - type: groups
                    id: 770e8400-e29b-41d4-a716-446655440001
                  - type: groups
                    id: 770e8400-e29b-41d4-a716-446655440002
                links:
                  self: /users/550e8400-e29b-41d4-a716-446655440000/relationships/groups
                  related: /users/550e8400-e29b-41d4-a716-446655440000/groups
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - users
      summary: Update user's groups relationship
      description: |
        Update the relationship between a user and their groups

        **Required Permission:** `users.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - groups
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      tags:
        - users
      summary: Add groups to user relationship
      description: |
        Add groups to a user's groups relationship

        **Required Permission:** `users.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - groups
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Groups added to relationship successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - users
      summary: Remove groups from user relationship
      description: |
        Remove groups from a user's groups relationship

        **Required Permission:** `users.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - groups
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Groups removed from relationship successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/users/{id}/image':
    get:
      tags:
        - users
      summary: Get user image
      description: Retrieve a user's profile image
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: Image format
          schema:
            type: string
            enum:
              - webp
              - png
              - jpeg
            default: webp
        - name: size
          in: query
          description: Image size in pixels
          schema:
            type: integer
            minimum: 32
            maximum: 256
            default: 256
      responses:
        '200':
          description: User profile image
          content:
            image/webp:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
  '/users/{id}/statistics':
    get:
      tags:
        - statistics
      summary: Get user statistics
      description: |
        Retrieve detailed rescue statistics for all of a user's commanders (rats).

        **Authentication Required:** Bearer token authentication

        Statistics include per-commander breakdowns of:
        - First limpet rescues (successful)
        - Code red first limpet rescues
        - Assist rescues (successful, non-first-limpet)
        - Failed rescues
        - Invalid rescues
        - Other outcome rescues

        This endpoint requires authentication and shows statistics for the specified user ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID to get statistics for
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User's rescue statistics by commander
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/statisticsUserStatisticsCollection'
              example:
                data:
                  - type: user-statistics
                    id: 660e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: MyCommander
                      codeRed: 12
                      firstLimpet: 89
                      assists: 156
                      failure: 3
                      other: 1
                      invalid: 0
                  - type: user-statistics
                    id: 660e8400-e29b-41d4-a716-446655440002
                    attributes:
                      name: MyAltCommander
                      codeRed: 5
                      firstLimpet: 34
                      assists: 67
                      failure: 1
                      other: 0
                      invalid: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: User not found or has no statistics
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '404'
                    title: Not Found
                    detail: User not found or has no rescue statistics
                    source:
                      parameter: id
  '/users/{id}/authenticator':
    get:
      tags:
        - users
      summary: Generate TOTP authenticator secret
      description: |
        Generate a new TOTP authenticator secret for two-factor authentication

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if setting up own 2FA)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: TOTP authenticator secret generated
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - authenticators
                      id:
                        type: string
                        format: uuid
                      attributes:
                        type: object
                        properties:
                          secret:
                            type: string
                            description: TOTP secret key
                          dataUri:
                            type: string
                            format: uri
                            description: QR code data URI for authenticator apps
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - users
                                  id:
                                    type: string
                                    format: uuid
              example:
                data:
                  type: authenticators
                  id: 990e8400-e29b-41d4-a716-446655440099
                  attributes:
                    secret: JBSWY3DPEHPK3PXP
                    dataUri: 'otpauth://totp/Fuel%20Rats:user@example.com?secret=JBSWY3DPEHPK3PXP&issuer=Fuel%20Rats'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
    post:
      tags:
        - users
      summary: Link TOTP authenticator
      description: |
        Link a TOTP authenticator to the user account by verifying the secret with a token

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if setting up own 2FA)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - authenticators
                    attributes:
                      type: object
                      required:
                        - secret
                        - token
                        - description
                      properties:
                        secret:
                          type: string
                          description: TOTP secret key from the generation step
                        token:
                          type: string
                          pattern: '^[0-9]{6}$'
                          description: Current 6-digit TOTP token
                        description:
                          type: string
                          description: User-friendly description for this authenticator
      responses:
        '201':
          description: Authenticator linked successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - users
      summary: Remove TOTP authenticator
      description: |
        Remove the TOTP authenticator from the user account

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if removing own 2FA)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - name: X-Verify
          in: header
          required: true
          description: Current 6-digit TOTP token for verification
          schema:
            type: string
            pattern: '^[0-9]{6}$'
      responses:
        '204':
          description: Authenticator removed successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/users/{id}/passkeys':
    get:
      $ref: ./routes/passkeys.yaml#/users_passkeys
    post:
      $ref: ./routes/passkeys.yaml#/users_passkeys_create
  '/users/{id}/passkeys/register':
    get:
      tags:
        - passkeys
      summary: Generate passkey registration options
      description: |
        Generate WebAuthn registration options for adding a new passkey to the user's account.
        This returns the challenge and options needed to create a new credential.

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if setting up own passkey)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: WebAuthn registration options
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - passkey-registration
                      attributes:
                        type: object
                        properties:
                          challenge:
                            type: string
                            description: Base64URL encoded challenge
                          rp:
                            type: object
                            properties:
                              name:
                                type: string
                                example: The Fuel Rats
                              id:
                                type: string
                                example: fuelrats.com
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                                description: User ID
                              name:
                                type: string
                                description: User email
                              displayName:
                                type: string
                                description: User display name
                          pubKeyCredParams:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - public-key
                                alg:
                                  type: number
                                  description: COSE algorithm identifier
                          timeout:
                            type: number
                            description: Timeout in milliseconds
                          excludeCredentials:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: Credential ID to exclude
                                type:
                                  type: string
                                  enum:
                                    - public-key
                          authenticatorSelection:
                            type: object
                            properties:
                              residentKey:
                                type: string
                                enum:
                                  - preferred
                              userVerification:
                                type: string
                                enum:
                                  - preferred
                          attestation:
                            type: string
                            enum:
                              - none
              example:
                data:
                  type: passkey-registration
                  attributes:
                    challenge: Y2hhbGxlbmdlU3RyaW5nRXhhbXBsZQ
                    rp:
                      name: The Fuel Rats
                      id: fuelrats.com
                    user:
                      id: 550e8400-e29b-41d4-a716-446655440000
                      name: user@example.com
                      displayName: Rescue Pilot
                    pubKeyCredParams:
                      - type: public-key
                        alg: -7
                      - type: public-key
                        alg: -257
                    timeout: 60000
                    excludeCredentials:
                      - id: QWJDMTIzLi4u
                        type: public-key
                    authenticatorSelection:
                      residentKey: preferred
                      userVerification: preferred
                    attestation: none
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/users/{id}/passkeys/{passkeyId}':
    delete:
      tags:
        - passkeys
      summary: Delete passkey
      description: |
        Remove a passkey from the user's account

        **Required Permission:** `users.write` OR self-access via `users.write.me` (if removing own passkey)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - name: passkeyId
          in: path
          required: true
          description: Passkey ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Passkey deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /passkeys/authenticate:
    post:
      tags:
        - passkeys
      summary: Generate authentication options
      description: |
        Generate WebAuthn authentication options for signing in with a passkey.
        This is the first step in the passkey authentication flow.

        **Public Access:** No authentication required (for login flow)
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - passkey-authentication
                    attributes:
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          format: email
                          description: User's email address
      responses:
        '200':
          description: WebAuthn authentication options
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - passkey-authentication
                      attributes:
                        type: object
                        properties:
                          challenge:
                            type: string
                            description: Base64URL encoded challenge
                          timeout:
                            type: number
                            description: Timeout in milliseconds
                          rpId:
                            type: string
                            example: fuelrats.com
                          allowCredentials:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: Allowed credential ID
                                type:
                                  type: string
                                  enum:
                                    - public-key
                          userVerification:
                            type: string
                            enum:
                              - preferred
              example:
                data:
                  type: passkey-authentication
                  attributes:
                    challenge: YXV0aENoYWxsZW5nZUV4YW1wbGU
                    timeout: 60000
                    rpId: fuelrats.com
                    allowCredentials:
                      - id: QWJDMTIzLi4u
                        type: public-key
                      - id: WXlaODkwLi4u
                        type: public-key
                    userVerification: preferred
        '401':
          description: No passkeys found for user or user doesn't exist
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /passkeys/verify:
    post:
      tags:
        - passkeys
      summary: Verify passkey authentication
      description: |
        Complete the passkey authentication by verifying the credential response from the authenticator.
        This is the second step in the passkey authentication flow.

        **Public Access:** No authentication required (for login flow)
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - passkey-verification
                    attributes:
                      type: object
                      required:
                        - response
                      properties:
                        response:
                          type: object
                          description: WebAuthn credential response from navigator.credentials.get()
                          properties:
                            id:
                              type: string
                              description: Credential ID
                            rawId:
                              type: string
                              description: Base64URL encoded raw credential ID
                            response:
                              type: object
                              properties:
                                clientDataJSON:
                                  type: string
                                  description: Base64URL encoded client data
                                authenticatorData:
                                  type: string
                                  description: Base64URL encoded authenticator data
                                signature:
                                  type: string
                                  description: Base64URL encoded signature
                                userHandle:
                                  type: string
                                  description: Base64URL encoded user handle
                            type:
                              type: string
                              enum:
                                - public-key
      responses:
        '200':
          description: Authentication successful
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - authentication-result
                      attributes:
                        type: object
                        properties:
                          verified:
                            type: boolean
                            description: Whether authentication was successful
                          user:
                            type: object
                            description: Authenticated user details
                            properties:
                              id:
                                type: string
                                format: uuid
                              email:
                                type: string
                                format: email
                              status:
                                type: string
              example:
                data:
                  type: authentication-result
                  attributes:
                    verified: true
                    user:
                      id: 550e8400-e29b-41d4-a716-446655440000
                      email: user@example.com
                      status: active
        '401':
          description: Authentication failed
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /rats:
    get:
      tags:
        - rats
      summary: List rats
      description: |
        Search and list commanders (rats) with optional filtering and pagination

        **Public Access:** No authentication required
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of rats
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ratsRatCollection'
              examples:
                successful_response:
                  summary: List of rats with associated users
                  description: Example response showing paginated list of commanders (rats) with their user relationships
                  value:
                    data:
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                        attributes:
                          name: SpacePilot42
                          platform: pc
                          expansion: odyssey
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                        relationships:
                          user:
                            data:
                              type: users
                              id: 550e8400-e29b-41d4-a716-446655440000
                            links:
                              self: /rats/660e8400-e29b-41d4-a716-446655440001/relationships/user
                              related: /rats/660e8400-e29b-41d4-a716-446655440001/user
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440002
                        attributes:
                          name: RescueCommander
                          platform: xb
                          expansion: horizons4
                          createdAt: '2023-01-02T00:00:00.000Z'
                          updatedAt: '2023-01-02T00:00:00.000Z'
                        relationships:
                          user:
                            data:
                              type: users
                              id: 550e8400-e29b-41d4-a716-446655440003
                            links:
                              self: /rats/660e8400-e29b-41d4-a716-446655440002/relationships/user
                              related: /rats/660e8400-e29b-41d4-a716-446655440002/user
                    included:
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                        attributes:
                          email: spacepilot@example.com
                          status: active
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440003
                        attributes:
                          email: rescuecommander@example.com
                          status: active
                          createdAt: '2023-01-02T00:00:00.000Z'
                          updatedAt: '2023-01-02T00:00:00.000Z'
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 156
                    links:
                      self: '/rats?page[offset]=0&page[limit]=20'
                      first: '/rats?page[offset]=0&page[limit]=20'
                      last: '/rats?page[offset]=140&page[limit]=20'
                      next: '/rats?page[offset]=20&page[limit]=20'
    post:
      tags:
        - rats
      summary: Create rat
      description: |
        Create a new commander (rat)

        **Required Permission:** `rats.write` OR self-access via `rats.write.me` (if creating rat for own account)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - rats
                    attributes:
                      type: object
                      required:
                        - name
                        - platform
                      properties:
                        name:
                          type: string
                          minLength: 3
                          maxLength: 64
                          description: Commander name
                        platform:
                          type: string
                          enum:
                            - pc
                            - xb
                            - ps
                          description: Gaming platform
                        expansion:
                          type: string
                          enum:
                            - horizons3
                            - horizons4
                            - odyssey
                          description: Game expansion
                        data:
                          type: object
                          description: Additional metadata
      responses:
        '201':
          description: Rat created successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ratsRatDocument'
              example:
                data:
                  type: rats
                  id: 660e8400-e29b-41d4-a716-446655440003
                  attributes:
                    name: NewRescuePilot
                    platform: xb
                    expansion: horizons4
                    createdAt: '2023-03-01T12:00:00.000Z'
                    updatedAt: '2023-03-01T12:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /rats/660e8400-e29b-41d4-a716-446655440003/relationships/user
                        related: /rats/660e8400-e29b-41d4-a716-446655440003/user
                included: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/rats/{id}':
    get:
      tags:
        - rats
      summary: Get rat by ID
      description: |
        Retrieve a specific rat by their ID

        **Public Access:** No authentication required
      parameters:
        - name: id
          in: path
          required: true
          description: Rat ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Rat details
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ratsRatDocument'
              example:
                data:
                  type: rats
                  id: 660e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: SpacePilot42
                    platform: pc
                    expansion: odyssey
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-01-01T00:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /rats/660e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /rats/660e8400-e29b-41d4-a716-446655440001/user
                included:
                  - type: users
                    id: 550e8400-e29b-41d4-a716-446655440000
                    attributes:
                      email: spacepilot@example.com
                      status: active
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - rats
      summary: Update rat
      description: |
        Update an existing rat

        **Required Permission:** `rats.write` OR self-access via `rats.write.me` (if updating own rat)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rat ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - rats
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 3
                          maxLength: 64
                        platform:
                          type: string
                          enum:
                            - pc
                            - xb
                            - ps
                        expansion:
                          type: string
                          enum:
                            - horizons3
                            - horizons4
                            - odyssey
                        data:
                          type: object
      responses:
        '200':
          description: Rat updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ratsRatDocument'
              example:
                data:
                  type: rats
                  id: 660e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: UpdatedPilotName
                    platform: pc
                    expansion: odyssey
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-03-01T15:30:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /rats/660e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /rats/660e8400-e29b-41d4-a716-446655440001/user
                included: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - rats
      summary: Delete rat
      description: |
        Delete a rat (only if no associated rescues)

        **Required Permission:** `rats.write` OR self-access via `rats.write.me` (if deleting own rat)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rat ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Rat deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/rats/{id}/relationships/user':
    get:
      tags:
        - rats
      summary: Get rat's user relationship
      description: |
        Retrieve the user who owns this rat

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rat ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Rat's user relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - users
                      id:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                links:
                  self: /rats/660e8400-e29b-41d4-a716-446655440001/relationships/user
                  related: /rats/660e8400-e29b-41d4-a716-446655440001/user
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - rats
      summary: Update rat's user relationship
      description: |
        Change the owner of this rat

        **Required Permission:** `rats.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rat ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /rescues:
    get:
      tags:
        - rescues
      summary: List rescues
      description: |
        Search and list rescue cases with optional filtering and pagination

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: List of rescues
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rescuesRescueCollection'
              examples:
                successful_response:
                  summary: Successful rescue list response
                  description: Example response showing multiple rescue cases with relationships and included data
                  value:
                    data:
                      - type: rescues
                        id: 880e8400-e29b-41d4-a716-446655440001
                        attributes:
                          client: StrandedPilot
                          clientNick: 'StrandedPilot[PC]'
                          platform: pc
                          expansion: odyssey
                          system: Col 285 Sector AA-E b28-0
                          codeRed: false
                          status: open
                          commandIdentifier: '42'
                          createdAt: '2023-01-15T14:30:00.000Z'
                          updatedAt: '2023-01-15T14:35:00.000Z'
                        relationships:
                          rats:
                            data:
                              - type: rats
                                id: 660e8400-e29b-41d4-a716-446655440001
                            links:
                              self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/rats
                              related: /rescues/880e8400-e29b-41d4-a716-446655440001/rats
                          firstLimpet:
                            data:
                              type: rats
                              id: 660e8400-e29b-41d4-a716-446655440001
                            links:
                              self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/firstLimpet
                              related: /rescues/880e8400-e29b-41d4-a716-446655440001/firstLimpet
                      - type: rescues
                        id: 880e8400-e29b-41d4-a716-446655440002
                        attributes:
                          client: EmergencyCase
                          clientNick: 'EmergencyCase[XB]'
                          platform: xb
                          expansion: horizons4
                          system: Sagittarius A*
                          codeRed: true
                          status: closed
                          outcome: success
                          commandIdentifier: '43'
                          createdAt: '2023-01-15T16:00:00.000Z'
                          updatedAt: '2023-01-15T16:45:00.000Z'
                        relationships:
                          rats:
                            data:
                              - type: rats
                                id: 660e8400-e29b-41d4-a716-446655440002
                              - type: rats
                                id: 660e8400-e29b-41d4-a716-446655440003
                            links:
                              self: /rescues/880e8400-e29b-41d4-a716-446655440002/relationships/rats
                              related: /rescues/880e8400-e29b-41d4-a716-446655440002/rats
                          firstLimpet:
                            data:
                              type: rats
                              id: 660e8400-e29b-41d4-a716-446655440002
                            links:
                              self: /rescues/880e8400-e29b-41d4-a716-446655440002/relationships/firstLimpet
                              related: /rescues/880e8400-e29b-41d4-a716-446655440002/firstLimpet
                    included:
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                        attributes:
                          name: RescueRat1
                          platform: pc
                          expansion: odyssey
                          createdAt: '2023-01-01T00:00:00.000Z'
                          updatedAt: '2023-01-01T00:00:00.000Z'
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440002
                        attributes:
                          name: RescueRat2
                          platform: xb
                          expansion: horizons4
                          createdAt: '2023-01-02T00:00:00.000Z'
                          updatedAt: '2023-01-02T00:00:00.000Z'
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440003
                        attributes:
                          name: RescueRat3
                          platform: xb
                          expansion: horizons4
                          createdAt: '2023-01-03T00:00:00.000Z'
                          updatedAt: '2023-01-03T00:00:00.000Z'
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 3247
                    links:
                      self: '/rescues?page[offset]=0&page[limit]=20'
                      first: '/rescues?page[offset]=0&page[limit]=20'
                      last: '/rescues?page[offset]=3240&page[limit]=20'
                      next: '/rescues?page[offset]=20&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - rescues
      summary: Create rescue
      description: |
        Create a new rescue case

        **Required Permission:** `rescues.write`
      security:
        - bearerAuth:
            - rescues.write
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - rescues
                    attributes:
                      type: object
                      required:
                        - client
                        - platform
                      properties:
                        client:
                          type: string
                          description: Client commander name
                        clientNick:
                          type: string
                          description: Client IRC nickname
                        platform:
                          type: string
                          enum:
                            - pc
                            - xb
                            - ps
                          description: Gaming platform
                        expansion:
                          type: string
                          enum:
                            - horizons3
                            - horizons4
                            - odyssey
                          description: Game expansion
                        system:
                          type: string
                          description: Star system location
                        codeRed:
                          type: boolean
                          description: Emergency status
                        notes:
                          type: string
                          description: Rescue notes
      responses:
        '201':
          description: Rescue created successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rescuesRescueDocument'
              example:
                data:
                  type: rescues
                  id: 880e8400-e29b-41d4-a716-446655440002
                  attributes:
                    client: NewStrandedPilot
                    clientNick: 'NewStrandedPilot[XB]'
                    platform: xb
                    expansion: horizons4
                    system: Sagittarius A*
                    codeRed: true
                    status: open
                    commandIdentifier: '43'
                    createdAt: '2023-01-15T16:00:00.000Z'
                    updatedAt: '2023-01-15T16:00:00.000Z'
                  relationships:
                    rats:
                      data: []
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440002/relationships/rats
                        related: /rescues/880e8400-e29b-41d4-a716-446655440002/rats
                    firstLimpet:
                      data: null
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440002/relationships/firstLimpet
                        related: /rescues/880e8400-e29b-41d4-a716-446655440002/firstLimpet
                included: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /rescues/me:
    get:
      tags:
        - rescues
      summary: Get current user's rescues
      description: |
        Retrieve rescues where the current user's rats are assigned

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of user's assigned rescues
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rescuesRescueCollection'
              example:
                data:
                  - type: rescues
                    id: 880e8400-e29b-41d4-a716-446655440001
                    attributes:
                      client: StrandedPilot
                      clientNick: 'StrandedPilot[PC]'
                      platform: pc
                      expansion: odyssey
                      system: Sol
                      codeRed: false
                      status: open
                      commandIdentifier: '42'
                      createdAt: '2023-01-15T14:30:00.000Z'
                      updatedAt: '2023-01-15T14:35:00.000Z'
                    relationships:
                      rats:
                        data:
                          - type: rats
                            id: 660e8400-e29b-41d4-a716-446655440001
                        links:
                          self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/rats
                          related: /rescues/880e8400-e29b-41d4-a716-446655440001/rats
                      firstLimpet:
                        data:
                          type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                        links:
                          self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/firstLimpet
                          related: /rescues/880e8400-e29b-41d4-a716-446655440001/firstLimpet
                included:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: MyRescueRat
                      platform: pc
                      expansion: odyssey
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
                meta:
                  page:
                    offset: 0
                    limit: 20
                    total: 5
                links:
                  self: '/rescues/me?page[offset]=0&page[limit]=20'
                  first: '/rescues/me?page[offset]=0&page[limit]=20'
                  last: '/rescues/me?page[offset]=0&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/rescues/{id}':
    get:
      tags:
        - rescues
      summary: Get rescue by ID
      description: |
        Retrieve a specific rescue case by ID

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Rescue details
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rescuesRescueDocument'
              example:
                data:
                  type: rescues
                  id: 880e8400-e29b-41d4-a716-446655440001
                  attributes:
                    client: StrandedPilot
                    clientNick: 'StrandedPilot[PC]'
                    platform: pc
                    expansion: odyssey
                    system: Col 285 Sector AA-E b28-0
                    codeRed: false
                    status: open
                    commandIdentifier: '42'
                    createdAt: '2023-01-15T14:30:00.000Z'
                    updatedAt: '2023-01-15T14:35:00.000Z'
                  relationships:
                    rats:
                      data:
                        - type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/rats
                        related: /rescues/880e8400-e29b-41d4-a716-446655440001/rats
                    firstLimpet:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/firstLimpet
                        related: /rescues/880e8400-e29b-41d4-a716-446655440001/firstLimpet
                included:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: RescueRat1
                      platform: pc
                      expansion: odyssey
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - rescues
      summary: Update rescue
      description: |
        Update an existing rescue case

        **Required Permission:** `rescues.write` OR assigned to rescue (self-access via `rescues.write.me`)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - rescues
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        client:
                          type: string
                        clientNick:
                          type: string
                        platform:
                          type: string
                          enum:
                            - pc
                            - xb
                            - ps
                        expansion:
                          type: string
                          enum:
                            - horizons3
                            - horizons4
                            - odyssey
                        system:
                          type: string
                        status:
                          type: string
                          enum:
                            - open
                            - inactive
                            - closed
                        outcome:
                          type: string
                          enum:
                            - success
                            - failure
                            - invalid
                            - other
                            - purge
                        codeRed:
                          type: boolean
                        notes:
                          type: string
      responses:
        '200':
          description: Rescue updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rescuesRescueDocument'
              example:
                data:
                  type: rescues
                  id: 880e8400-e29b-41d4-a716-446655440001
                  attributes:
                    client: UpdatedStrandedPilot
                    clientNick: 'UpdatedStrandedPilot[PC]'
                    platform: pc
                    expansion: odyssey
                    system: Updated System
                    codeRed: false
                    status: closed
                    outcome: success
                    commandIdentifier: '42'
                    createdAt: '2023-01-15T14:30:00.000Z'
                    updatedAt: '2023-01-15T16:45:00.000Z'
                  relationships:
                    rats:
                      data:
                        - type: rats
                          id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/rats
                        related: /rescues/880e8400-e29b-41d4-a716-446655440001/rats
                    firstLimpet:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/firstLimpet
                        related: /rescues/880e8400-e29b-41d4-a716-446655440001/firstLimpet
                included: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - rescues
      summary: Delete rescue
      description: |
        Delete a rescue case

        **Required Permission:** `rescues.write`
      security:
        - bearerAuth:
            - rescues.write
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Rescue deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/rescues/{id}/relationships/rats':
    get:
      tags:
        - rescues
      summary: Get rescue's rats relationship
      description: |
        Retrieve the rats assigned to a rescue

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Rescue's rats relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - rats
                        id:
                          type: string
                          format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440001
                  - type: rats
                    id: 660e8400-e29b-41d4-a716-446655440002
                links:
                  self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/rats
                  related: /rescues/880e8400-e29b-41d4-a716-446655440001/rats
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - rescues
      summary: Assign rats to rescue
      description: |
        Add rats to a rescue's assigned rats list

        **Required Permission:** `rescues.write` OR assigned to rescue (self-access via `rescues.write.me`)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Rats assigned to rescue successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      tags:
        - rescues
      summary: Update rescue's rats relationship
      description: |
        Replace the entire list of rats assigned to a rescue

        **Required Permission:** `rescues.write` OR assigned to rescue (self-access via `rescues.write.me`)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Rescue's rats relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - rescues
      summary: Unassign rats from rescue
      description: |
        Remove rats from a rescue's assigned rats list

        **Required Permission:** `rescues.write` OR assigned to rescue (self-access via `rescues.write.me`)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
      responses:
        '204':
          description: Rats unassigned from rescue successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/rescues/{id}/relationships/firstLimpet':
    get:
      tags:
        - rescues
      summary: Get rescue's first limpet relationship
      description: |
        Retrieve the rat designated as the first limpet for a rescue

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Rescue's first limpet relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - rats
                          id:
                            type: string
                            format: uuid
                      - type: 'null'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  type: rats
                  id: 660e8400-e29b-41d4-a716-446655440001
                links:
                  self: /rescues/880e8400-e29b-41d4-a716-446655440001/relationships/firstLimpet
                  related: /rescues/880e8400-e29b-41d4-a716-446655440001/firstLimpet
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - rescues
      summary: Set rescue's first limpet
      description: |
        Set which rat is designated as the first limpet for a rescue.
        The rat must already be assigned to the rescue.

        **Required Permission:** `rescues.write` OR assigned to rescue (self-access via `rescues.write.me`)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  oneOf:
                    - type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum:
                            - rats
                        id:
                          type: string
                          format: uuid
                    - type: 'null'
                      description: Set to null to remove first limpet designation
      responses:
        '204':
          description: First limpet updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Rat is not assigned to this rescue
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
  '/rescues/{id}/alert':
    post:
      tags:
        - rescues
      summary: Send rescue alert
      description: |
        Send an alert to notify available rats about a rescue case.
        The alert is sent based on the rescue's platform and expansion requirements.

        **Required Permission:** `rescues.write`
      security:
        - bearerAuth:
            - rescues.write
      parameters:
        - name: id
          in: path
          required: true
          description: Rescue ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Rescue alert sent successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /nicknames:
    get:
      tags:
        - nicknames
      summary: Search nicknames
      description: |
        Search for IRC nicknames

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: nick
          in: query
          required: true
          description: Nickname to search for
          schema:
            type: string
      responses:
        '200':
          description: Nickname search results
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nicknamesNicknameCollection'
              examples:
                successful_response:
                  summary: Nickname search results with relationships
                  description: Example response showing IRC nickname search results with associated user and rat information
                  value:
                    data:
                      - type: nicknames
                        id: nick123
                        attributes:
                          nick: SpacePilot42
                          email: pilot@example.com
                          vhost: pilot.rat.fuelrats.com
                          display: SpacePilot42
                          createdAt: '2023-01-15T10:30:00.000Z'
                          updatedAt: '2023-01-15T10:30:00.000Z'
                        relationships:
                          user:
                            data:
                              type: users
                              id: 550e8400-e29b-41d4-a716-446655440000
                            links:
                              self: /nicknames/nick123/relationships/user
                              related: /nicknames/nick123/user
                          rat:
                            data:
                              type: rats
                              id: 660e8400-e29b-41d4-a716-446655440001
                            links:
                              self: /nicknames/nick123/relationships/rat
                              related: /nicknames/nick123/rat
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 1
                    links:
                      self: '/nicknames?nick=SpacePilot42&page[offset]=0&page[limit]=20'
                      first: '/nicknames?nick=SpacePilot42&page[offset]=0&page[limit]=20'
                      last: '/nicknames?nick=SpacePilot42&page[offset]=0&page[limit]=20'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - nicknames
      summary: Register nickname
      description: |
        Register a new IRC nickname

        **Authentication Required:** Bearer token authentication (self-access only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - nicknames
                    attributes:
                      type: object
                      required:
                        - nick
                      properties:
                        nick:
                          type: string
                          pattern: '^[A-Za-z_\\`\[\]{}]([A-Za-z0-9_\\`\[\]{}\-|]{1,29})?$'
                          description: IRC nickname to register
                        ratId:
                          type: string
                          format: uuid
                          description: Associated rat ID
      responses:
        '201':
          description: Nickname registered successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nicknamesNicknameDocument'
              example:
                data:
                  type: nicknames
                  id: nick456
                  attributes:
                    nick: NewRescuer
                    email: newrescuer@example.com
                    vhost: newrescuer.rat.fuelrats.com
                    display: NewRescuer
                    createdAt: '2023-03-01T14:20:00.000Z'
                    updatedAt: '2023-03-01T14:20:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /nicknames/nick456/relationships/user
                        related: /nicknames/nick456/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440002
                      links:
                        self: /nicknames/nick456/relationships/rat
                        related: /nicknames/nick456/rat
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Nickname already exists
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/nicknames/{id}':
    get:
      tags:
        - nicknames
      summary: Get nickname by ID
      description: |
        Retrieve nickname information by ID

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Nickname ID
          schema:
            type: string
      responses:
        '200':
          description: Nickname details
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nicknamesNicknameDocument'
              example:
                data:
                  type: nicknames
                  id: nick123
                  attributes:
                    nick: SpacePilot42
                    email: pilot@example.com
                    vhost: pilot.rat.fuelrats.com
                    display: SpacePilot42
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-01-15T10:30:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /nicknames/nick123/relationships/user
                        related: /nicknames/nick123/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /nicknames/nick123/relationships/rat
                        related: /nicknames/nick123/rat
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - nicknames
      summary: Drop nickname
      description: |
        Remove an IRC nickname (cannot delete display nickname)

        **Authentication Required:** Bearer token authentication (self-access only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Nickname ID
          schema:
            type: string
      responses:
        '204':
          description: Nickname deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Cannot delete display nickname
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
  '/nicknames/{id}/display':
    put:
      tags:
        - nicknames
      summary: Set display nickname
      description: |
        Change the main display nickname for an IRC account

        **Authentication Required:** Bearer token authentication (self-access only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Nickname ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - nicknames
                    attributes:
                      type: object
                      required:
                        - displayNick
                      properties:
                        displayNick:
                          type: string
                          pattern: '^[A-Za-z_\\`\[\]{}]([A-Za-z0-9_\\`\[\]{}\-|]{1,29})?$'
                          description: Nickname to set as display name
      responses:
        '200':
          description: Display nickname updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/nicknamesNicknameDocument'
              example:
                data:
                  type: nicknames
                  id: nick123
                  attributes:
                    nick: SpacePilot42
                    email: pilot@example.com
                    vhost: pilot.rat.fuelrats.com
                    display: SpacePilot42
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-03-01T16:45:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /nicknames/nick123/relationships/user
                        related: /nicknames/nick123/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /nicknames/nick123/relationships/rat
                        related: /nicknames/nick123/rat
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/nicknames/{id}/relationships/user':
    get:
      tags:
        - nicknames
      summary: Get nickname's user relationship
      description: |
        Retrieve the user associated with a nickname

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Nickname ID
          schema:
            type: string
      responses:
        '200':
          description: Nickname's user relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - users
                      id:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  type: users
                  id: 550e8400-e29b-41d4-a716-446655440000
                links:
                  self: /nicknames/SpacePilot42/relationships/user
                  related: /nicknames/SpacePilot42/user
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/nicknames/{nick}/relationships/rat':
    get:
      tags:
        - nicknames
      summary: Get nickname's rat relationship
      description: |
        Retrieve the rat (commander) associated with a nickname

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: nick
          in: path
          required: true
          description: IRC nickname
          schema:
            type: string
            pattern: '^[A-Za-z_\\`\[\]{}]([A-Za-z0-9_\\`\[\]{}\-|]{1,29})?$'
      responses:
        '200':
          description: Nickname's rat relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - rats
                          id:
                            type: string
                            format: uuid
                      - type: 'null'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
              example:
                data:
                  type: rats
                  id: 660e8400-e29b-41d4-a716-446655440001
                links:
                  self: /nicknames/SpacePilot42/relationships/rat
                  related: /nicknames/SpacePilot42/rat
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - nicknames
      summary: Update nickname's rat relationship
      description: |
        Set or update the rat (commander) associated with a nickname

        **Authentication Required:** Bearer token authentication (self-access only)
      security:
        - bearerAuth: []
      parameters:
        - name: nick
          in: path
          required: true
          description: IRC nickname
          schema:
            type: string
            pattern: '^[A-Za-z_\\`\[\]{}]([A-Za-z0-9_\\`\[\]{}\-|]{1,29})?$'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  oneOf:
                    - type: object
                      required:
                        - type
                        - id
                      properties:
                        type:
                          type: string
                          enum:
                            - rats
                        id:
                          type: string
                          format: uuid
                    - type: 'null'
                      description: Set to null to remove the relationship
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /groups:
    get:
      tags:
        - groups
      summary: List groups
      description: |
        Retrieve all user groups with optional filtering and pagination

        **Required Permission:** `groups.read`
      security:
        - bearerAuth:
            - groups.read
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of groups
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/groupsGroupCollection'
              examples:
                successful_response:
                  summary: List of user groups with permissions
                  description: Example response showing different user groups with their permissions and IRC settings
                  value:
                    data:
                      - type: groups
                        id: 110e8400-e29b-41d4-a716-446655440001
                        attributes:
                          name: verified
                          vhost: rat.fuelrats.com
                          priority: 10
                          permissions:
                            - read
                            - write
                          withoutPrefix: false
                          isAdministrator: false
                          channels:
                            - '#fuelrats'
                            - '#ratchat'
                          createdAt: '2020-01-01T00:00:00.000Z'
                          updatedAt: '2020-01-01T00:00:00.000Z'
                      - type: groups
                        id: 110e8400-e29b-41d4-a716-446655440002
                        attributes:
                          name: dispatch
                          vhost: dispatch.fuelrats.com
                          priority: 50
                          permissions:
                            - read
                            - write
                            - rescues.write
                            - dispatch
                          withoutPrefix: true
                          isAdministrator: true
                          channels:
                            - '#fuelrats'
                            - '#ratchat'
                            - '#dispatch'
                          createdAt: '2020-01-01T00:00:00.000Z'
                          updatedAt: '2020-01-01T00:00:00.000Z'
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 12
                    links:
                      self: '/groups?page[offset]=0&page[limit]=20'
                      first: '/groups?page[offset]=0&page[limit]=20'
                      last: '/groups?page[offset]=0&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - groups
      summary: Create group
      description: |
        Create a new user group

        **Required Permission:** `groups.write`
      security:
        - bearerAuth:
            - groups.write
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - groups
                    attributes:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          description: Group name
                        vhost:
                          type: string
                          description: Virtual host for the group
                        permissions:
                          type: array
                          items:
                            type: string
                          description: List of permissions
                        priority:
                          type: integer
                          description: Group priority level
      responses:
        '201':
          description: Group created successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/groupsGroupDocument'
              example:
                data:
                  type: groups
                  id: 110e8400-e29b-41d4-a716-446655440003
                  attributes:
                    name: moderators
                    vhost: mod.fuelrats.com
                    priority: 30
                    permissions:
                      - read
                      - write
                      - moderate
                    withoutPrefix: false
                    isAdministrator: false
                    channels:
                      - '#fuelrats'
                      - '#ratchat'
                    createdAt: '2023-01-15T14:30:00.000Z'
                    updatedAt: '2023-01-15T14:30:00.000Z'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/groups/{id}':
    get:
      tags:
        - groups
      summary: Get group by ID
      description: |
        Retrieve a specific group by ID

        **Required Permission:** `groups.read`
      security:
        - bearerAuth:
            - groups.read
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Group details
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/groupsGroupDocument'
              example:
                data:
                  type: groups
                  id: 110e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: verified
                    vhost: rat.fuelrats.com
                    priority: 10
                    permissions:
                      - read
                      - write
                    withoutPrefix: false
                    isAdministrator: false
                    channels:
                      - '#fuelrats'
                      - '#ratchat'
                    createdAt: '2020-01-01T00:00:00.000Z'
                    updatedAt: '2020-01-01T00:00:00.000Z'
                  relationships:
                    users:
                      data:
                        - type: users
                          id: 550e8400-e29b-41d4-a716-446655440001
                        - type: users
                          id: 550e8400-e29b-41d4-a716-446655440002
                      links:
                        self: /groups/110e8400-e29b-41d4-a716-446655440001/relationships/users
                        related: /groups/110e8400-e29b-41d4-a716-446655440001/users
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - groups
      summary: Update group
      description: |
        Update an existing group

        **Required Permission:** `groups.write`
      security:
        - bearerAuth:
            - groups.write
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - groups
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        vhost:
                          type: string
                        permissions:
                          type: array
                          items:
                            type: string
                        priority:
                          type: integer
      responses:
        '200':
          description: Group updated successfully
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/groupsGroupDocument'
              example:
                data:
                  type: groups
                  id: 110e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: verified
                    vhost: verified.fuelrats.com
                    priority: 15
                    permissions:
                      - read
                      - write
                      - verified
                    withoutPrefix: false
                    isAdministrator: false
                    channels:
                      - '#fuelrats'
                      - '#ratchat'
                      - '#verified'
                    createdAt: '2020-01-01T00:00:00.000Z'
                    updatedAt: '2023-01-15T14:30:00.000Z'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - groups
      summary: Delete group
      description: |
        Delete a group

        **Required Permission:** `groups.write`
      security:
        - bearerAuth:
            - groups.write
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Group deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /oauth2/authorize:
    get:
      tags:
        - oauth2
      summary: OAuth2 authorization endpoint
      description: |
        Initiate OAuth2 authorization flow. Supports both Authorization Code and Implicit Grant flows.

        If the user has previously granted the requested permissions to the client, they will be 
        immediately redirected back with the authorization code or token without seeing the consent screen.

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: response_type
          in: query
          required: true
          description: OAuth2 response type
          schema:
            type: string
            enum:
              - code
              - token
            description: |
              - `code`: Authorization Code flow (recommended)
              - `token`: Implicit Grant flow (for client-side apps)
        - name: client_id
          in: query
          required: true
          description: OAuth2 client identifier
          schema:
            type: string
            format: uuid
        - name: redirect_uri
          in: query
          required: true
          description: |
            Redirect URI after authorization. For Implicit Grant (token), this must match exactly
            the redirectUri stored in the OAuth client configuration.
          schema:
            type: string
            format: uri
        - name: scope
          in: query
          required: true
          description: |
            Space-separated list of requested permissions.
            Available scopes: `users.read`, `users.write`, `users.write.me`, `rats.read`, `rats.write`,
            `rescues.read`, `rescues.write`, and namespace-specific scopes.
          schema:
            type: string
            example: users.read rats.read
        - name: state
          in: query
          required: true
          description: |
            Client state parameter for CSRF protection. This value will be returned unchanged
            in the callback to verify the response matches the request.
          schema:
            type: string
      responses:
        '200':
          description: Authorization consent screen data (when user consent is needed)
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                    description: Transaction ID for the authorization decision
                  scopes:
                    type: array
                    items:
                      type: string
                    description: List of requested permission scopes
                  clientId:
                    type: string
                    format: uuid
                    description: OAuth client ID
                  clientName:
                    type: string
                    description: Human-readable name of the OAuth client
                  firstParty:
                    type: boolean
                    description: Whether this is a first-party Fuel Rats client
                  state:
                    type: string
                    description: State parameter from the request
              example:
                transactionId: abc123def456
                scopes:
                  - users.read
                  - rats.read
                clientId: 110e8400-e29b-41d4-a716-446655440001
                clientName: My Rescue Tool
                firstParty: false
                state: xyz789
        '302':
          description: |
            Redirect to callback with authorization code or token (when user has previously consented)
          headers:
            Location:
              description: Redirect URL with code/token or error
              schema:
                type: string
                format: uri
                example: 'https://example.com/callback?code=abc123&state=xyz789'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect:
                    type: string
                    format: uri
                    description: Redirect URL with error parameters
                example:
                  redirect: 'https://example.com/callback?error=invalid_request&error_description=Missing+state+parameter'
    post:
      tags:
        - oauth2
      summary: OAuth2 authorization decision
      description: |
        Handle user's authorization decision (allow or deny access).
        This endpoint is called after the user views the consent screen.

        **Authentication Required:** Bearer token or session authentication
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transactionId
                - allow
              properties:
                transactionId:
                  type: string
                  description: Transaction ID from the authorization request
                allow:
                  type: boolean
                  description: Whether the user allows access (true) or denies it (false)
            example:
              transactionId: abc123def456
              allow: true
      responses:
        '200':
          description: Authorization decision processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect:
                    type: string
                    format: uri
                    description: Redirect URL with authorization code/token or error
              example:
                redirect: 'https://example.com/callback?code=AUTH_CODE_HERE&state=xyz789'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          description: Invalid transaction or user mismatch
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
  /oauth2/token:
    post:
      tags:
        - oauth2
      summary: OAuth2 token endpoint
      description: |
        Exchange authorization code for access token or use Resource Owner Password Credentials (ROPC).

        Supports grant types:
        - `authorization_code`: Exchange code for token (standard OAuth2 flow)
        - `password`: Resource Owner Password Credentials (first-party clients only)

        **Authentication Required:** Basic authentication with client credentials
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - type: object
                  required:
                    - grant_type
                    - code
                    - redirect_uri
                  properties:
                    grant_type:
                      type: string
                      enum:
                        - authorization_code
                    code:
                      type: string
                      description: Authorization code from the authorize endpoint
                    redirect_uri:
                      type: string
                      format: uri
                      description: Must match the redirect_uri used in the authorization request
                - type: object
                  required:
                    - grant_type
                    - username
                    - password
                  properties:
                    grant_type:
                      type: string
                      enum:
                        - password
                    username:
                      type: string
                      description: User's email address
                    password:
                      type: string
                      description: User's password
                    code:
                      type: string
                      description: 2FA code if user has 2FA enabled
                    scope:
                      type: string
                      description: Space-separated scopes (defaults to "*" for full access)
            examples:
              authorization_code:
                value:
                  grant_type: authorization_code
                  code: AUTH_CODE_HERE
                  redirect_uri: 'https://example.com/callback'
              password:
                value:
                  grant_type: password
                  username: user@example.com
                  password: secret123
                  code: '123456'
                  scope: users.read rats.read
      responses:
        '200':
          description: Access token response
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - token_type
                properties:
                  access_token:
                    type: string
                    description: Bearer access token
                  token_type:
                    type: string
                    enum:
                      - bearer
                    description: Token type (always "bearer")
                  scope:
                    type: string
                    description: Granted scopes (only for implicit grant)
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                token_type: bearer
        '400':
          description: Invalid request or grant
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_request
                      - invalid_client
                      - invalid_grant
                      - unauthorized_client
                      - unsupported_grant_type
                      - invalid_scope
                  error_description:
                    type: string
                example:
                  error: invalid_grant
                  error_description: Invalid authorization code
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_client
                  error_description:
                    type: string
                example:
                  error: invalid_client
                  error_description: Client authentication failed
  /oauth2/revoke:
    post:
      tags:
        - oauth2
      summary: Revoke access token
      description: |
        Revoke a specific access token. The token will immediately become invalid.
        Only tokens issued to the authenticated client can be revoked.

        **Authentication Required:** Basic authentication with client credentials
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: The access token to revoke
            example:
              token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token revoked successfully (returns empty object even if token didn't exist)
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_request
                  error_description:
                    type: string
                example:
                  error: invalid_request
                  error_description: Missing token parameter
        '401':
          $ref: '#/components/responses/Unauthorized'
  /oauth2/revokeall:
    post:
      tags:
        - oauth2
      summary: Revoke all client tokens
      description: |
        Revoke all access tokens issued to the authenticated client.
        This is useful when a client's credentials may have been compromised.

        **Authentication Required:** Basic authentication with client credentials
      security:
        - basicAuth: []
      responses:
        '200':
          description: All tokens revoked successfully
          content:
            application/json:
              schema:
                type: object
              example: {}
        '401':
          $ref: '#/components/responses/Unauthorized'
  /clients:
    get:
      tags:
        - oauth2
      summary: List OAuth clients
      description: |
        List OAuth clients owned by the authenticated user

        **Authentication Required:** Bearer token authentication (only shows user's own clients)
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of OAuth clients
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clientsClient'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
              example:
                data:
                  - type: clients
                    id: 110e8400-e29b-41d4-a716-446655440001
                    attributes:
                      name: My Application
                      redirectUri: 'https://myapp.example.com/oauth/callback'
                      namespaces:
                        - users.read
                        - rats.read
                      firstParty: false
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
                    relationships:
                      user:
                        data:
                          type: users
                          id: 550e8400-e29b-41d4-a716-446655440000
                        links:
                          self: /clients/110e8400-e29b-41d4-a716-446655440001/relationships/user
                          related: /clients/110e8400-e29b-41d4-a716-446655440001/user
                included:
                  - type: users
                    id: 550e8400-e29b-41d4-a716-446655440000
                    attributes:
                      email: developer@example.com
                      status: active
                      createdAt: '2023-01-01T00:00:00.000Z'
                      updatedAt: '2023-01-01T00:00:00.000Z'
                meta:
                  page:
                    offset: 0
                    limit: 20
                    total: 5
                links:
                  self: '/clients?page[offset]=0&page[limit]=20'
                  first: '/clients?page[offset]=0&page[limit]=20'
                  last: '/clients?page[offset]=0&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - oauth2
      summary: Create OAuth client
      description: |
        Create a new OAuth client

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - clients
                    attributes:
                      type: object
                      required:
                        - name
                        - redirectUri
                      properties:
                        name:
                          type: string
                          description: Name of the OAuth client application
                        redirectUri:
                          type: string
                          format: uri
                          description: OAuth redirect URI
                        namespaces:
                          type: array
                          items:
                            type: string
                          description: OAuth scopes/namespaces the client can request
      responses:
        '201':
          description: OAuth client created successfully
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/clientsClient'
                  meta:
                    type: object
                    properties:
                      secret:
                        type: string
                        description: Client secret (only shown once)
              example:
                data:
                  type: clients
                  id: 110e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: My New Application
                    redirectUri: 'https://myapp.example.com/oauth/callback'
                    namespaces:
                      - users.read
                      - rats.read
                    firstParty: false
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-01-15T10:30:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /clients/110e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /clients/110e8400-e29b-41d4-a716-446655440001/user
                meta:
                  secret: xoxb-1234567890-abcdef1234567890abcdef1234567890
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/clients/{id}':
    get:
      tags:
        - oauth2
      summary: Get OAuth client by ID
      description: |
        Retrieve a specific OAuth client by ID

        **Authentication Required:** Bearer token authentication (only accessible to client owner)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: OAuth client ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: OAuth client details
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/clientsClient'
              example:
                data:
                  type: clients
                  id: 110e8400-e29b-41d4-a716-446655440001
                  attributes:
                    name: My Application
                    redirectUri: 'https://myapp.example.com/oauth/callback'
                    namespaces:
                      - users.read
                      - rats.read
                    firstParty: false
                    createdAt: '2023-01-01T00:00:00.000Z'
                    updatedAt: '2023-01-01T00:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /clients/110e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /clients/110e8400-e29b-41d4-a716-446655440001/user
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - oauth2
      summary: Update OAuth client
      description: |
        Update an existing OAuth client

        **Authentication Required:** Bearer token authentication (only accessible to client owner)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: OAuth client ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - clients
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the OAuth client application
                        redirectUri:
                          type: string
                          format: uri
                          description: OAuth redirect URI
                        namespaces:
                          type: array
                          items:
                            type: string
                          description: OAuth scopes/namespaces the client can request
      responses:
        '200':
          description: OAuth client updated successfully
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/clientsClient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - oauth2
      summary: Delete OAuth client
      description: |
        Delete an OAuth client. Requires basic authentication with the client ID and secret.
        The client ID in the authorization header must match the resource ID.

        **Required Permission:** `clients.write`
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: OAuth client ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: OAuth client deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/clients/{id}/relationships/user':
    get:
      tags:
        - oauth2
      summary: Get client's user relationship
      description: |
        Retrieve the relationship data for a client's owner

        **Authentication Required:** Bearer token authentication (only accessible to client owner)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: OAuth client ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Client's user relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - users
                      id:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - oauth2
      summary: Update client's user relationship
      description: |
        Update the relationship between a client and its owner

        **Required Permission:** `clients.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: OAuth client ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /decals:
    get:
      tags:
        - decals
      summary: List decals
      description: |
        List all decals in the system

        **Required Permission:** `decals.read`
      security:
        - bearerAuth:
            - decals.read
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: List of decals
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/decalsDecal'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
              examples:
                successful_response:
                  summary: List of decals with user and rat relationships
                  description: Example response showing various types of awarded decals with their associated users and commanders
                  value:
                    data:
                      - type: decals
                        id: 220e8400-e29b-41d4-a716-446655440001
                        attributes:
                          code: RESCUE-2023-001
                          type: rescue
                          notes: Awarded for 10 successful rescues
                          createdAt: '2023-01-15T10:30:00.000Z'
                          updatedAt: '2023-01-15T10:30:00.000Z'
                        relationships:
                          user:
                            data:
                              type: users
                              id: 550e8400-e29b-41d4-a716-446655440000
                            links:
                              self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/user
                              related: /decals/220e8400-e29b-41d4-a716-446655440001/user
                          rat:
                            data:
                              type: rats
                              id: 660e8400-e29b-41d4-a716-446655440001
                            links:
                              self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/rat
                              related: /decals/220e8400-e29b-41d4-a716-446655440001/rat
                      - type: decals
                        id: 220e8400-e29b-41d4-a716-446655440002
                        attributes:
                          code: EPIC-2023-042
                          type: epic
                          notes: Epic rescue award
                          createdAt: '2023-02-01T08:00:00.000Z'
                          updatedAt: '2023-02-01T08:00:00.000Z'
                        relationships:
                          user:
                            data:
                              type: users
                              id: 550e8400-e29b-41d4-a716-446655440003
                            links:
                              self: /decals/220e8400-e29b-41d4-a716-446655440002/relationships/user
                              related: /decals/220e8400-e29b-41d4-a716-446655440002/user
                          rat:
                            data:
                              type: rats
                              id: 660e8400-e29b-41d4-a716-446655440002
                            links:
                              self: /decals/220e8400-e29b-41d4-a716-446655440002/relationships/rat
                              related: /decals/220e8400-e29b-41d4-a716-446655440002/rat
                    included:
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                        attributes:
                          email: rescuer@example.com
                          status: active
                      - type: users
                        id: 550e8400-e29b-41d4-a716-446655440003
                        attributes:
                          email: epicrescuer@example.com
                          status: active
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                        attributes:
                          name: RescuePilot
                          platform: pc
                      - type: rats
                        id: 660e8400-e29b-41d4-a716-446655440002
                        attributes:
                          name: EpicRescuer
                          platform: pc
                    meta:
                      page:
                        offset: 0
                        limit: 20
                        total: 42
                    links:
                      self: '/decals?page[offset]=0&page[limit]=20'
                      first: '/decals?page[offset]=0&page[limit]=20'
                      last: '/decals?page[offset]=40&page[limit]=20'
                      next: '/decals?page[offset]=20&page[limit]=20'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - decals
      summary: Create decal
      description: |
        Create a new decal

        **Required Permission:** `decals.write`
      security:
        - bearerAuth:
            - decals.write
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - decals
                    attributes:
                      type: object
                      required:
                        - type
                        - userId
                      properties:
                        code:
                          type: string
                          description: Unique decal code
                        type:
                          type: string
                          enum:
                            - rescue
                            - epic
                            - thisisfine
                            - anniversary
                          description: Type of decal
                        notes:
                          type: string
                          description: Additional notes about the decal
                        userId:
                          type: string
                          format: uuid
                          description: User ID to award the decal to
                        ratId:
                          type: string
                          format: uuid
                          description: Optional Rat ID associated with the decal
      responses:
        '201':
          description: Decal created successfully
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/decalsDecal'
              example:
                data:
                  type: decals
                  id: 220e8400-e29b-41d4-a716-446655440003
                  attributes:
                    code: RESCUE-2023-042
                    type: rescue
                    notes: Monthly rescue milestone
                    createdAt: '2023-03-01T10:00:00.000Z'
                    updatedAt: '2023-03-01T10:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440003/relationships/user
                        related: /decals/220e8400-e29b-41d4-a716-446655440003/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440003/relationships/rat
                        related: /decals/220e8400-e29b-41d4-a716-446655440003/rat
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/decals/{id}':
    get:
      tags:
        - decals
      summary: Get decal by ID
      description: |
        Retrieve a specific decal by ID

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Decal ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Decal details
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/decalsDecal'
              example:
                data:
                  type: decals
                  id: 220e8400-e29b-41d4-a716-446655440001
                  attributes:
                    code: RESCUE-2023-001
                    type: rescue
                    notes: Awarded for 10 successful rescues
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-01-15T10:30:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /decals/220e8400-e29b-41d4-a716-446655440001/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/rat
                        related: /decals/220e8400-e29b-41d4-a716-446655440001/rat
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - decals
      summary: Update decal
      description: |
        Update an existing decal

        **Required Permission:** `decals.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Decal ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - decals
                    id:
                      type: string
                      format: uuid
                    attributes:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Unique decal code
                        type:
                          type: string
                          enum:
                            - rescue
                            - epic
                            - thisisfine
                            - anniversary
                          description: Type of decal
                        notes:
                          type: string
                          description: Additional notes about the decal
      responses:
        '200':
          description: Decal updated successfully
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/decalsDecal'
              example:
                data:
                  type: decals
                  id: 220e8400-e29b-41d4-a716-446655440001
                  attributes:
                    code: RESCUE-2023-001-UPDATED
                    type: rescue
                    notes: Updated rescue award with corrected details
                    createdAt: '2023-01-15T10:30:00.000Z'
                    updatedAt: '2023-03-01T15:00:00.000Z'
                  relationships:
                    user:
                      data:
                        type: users
                        id: 550e8400-e29b-41d4-a716-446655440000
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/user
                        related: /decals/220e8400-e29b-41d4-a716-446655440001/user
                    rat:
                      data:
                        type: rats
                        id: 660e8400-e29b-41d4-a716-446655440001
                      links:
                        self: /decals/220e8400-e29b-41d4-a716-446655440001/relationships/rat
                        related: /decals/220e8400-e29b-41d4-a716-446655440001/rat
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - decals
      summary: Delete decal
      description: |
        Delete a decal

        **Required Permission:** `decals.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Decal ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Decal deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/decals/{id}/relationships/rat':
    get:
      tags:
        - decals
      summary: Get decal's rat relationship
      description: |
        Retrieve the relationship data for a decal's associated rat

        **Authentication Required:** Bearer token authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Decal ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Decal's rat relationship data
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - rats
                      id:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      related:
                        type: string
                        format: uri
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - decals
      summary: Update decal's rat relationship
      description: |
        Update the relationship between a decal and its associated rat

        **Required Permission:** `decals.write`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Decal ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - rats
                    id:
                      type: string
                      format: uuid
      responses:
        '204':
          description: Relationship updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /events:
    get:
      tags:
        - events
      summary: Server-Sent Events stream
      description: |
        Subscribe to real-time events using Server-Sent Events (SSE).
        This endpoint opens a persistent connection to receive real-time updates about API changes.

        **Authentication Required:** Bearer token authentication

        The events are sent in the following format:
        ```
        event: fuelrats.rescue.create
        data: {"id": "...", "user": "...", "data": {...}}
        ```
      security:
        - bearerAuth: []
      responses:
        '200':
          description: SSE stream established
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-Sent Events stream
              example: |
                event: fuelrats.rescue.create
                data: {"id":"880e8400-e29b-41d4-a716-446655440001","user":"550e8400-e29b-41d4-a716-446655440000","data":{"type":"rescues","id":"880e8400-e29b-41d4-a716-446655440001","attributes":{"client":"StrandedPilot","platform":"pc","status":"open"}}}

                event: fuelrats.rescue.update
                data: {"id":"880e8400-e29b-41d4-a716-446655440001","user":"550e8400-e29b-41d4-a716-446655440000","data":{"type":"rescues","id":"880e8400-e29b-41d4-a716-446655440001","attributes":{"status":"closed","outcome":"success"}}}
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/events/{event}':
    post:
      tags:
        - events
      summary: Broadcast custom event
      description: |
        Broadcast a custom event to all subscribed clients.

        Event names must follow the format: `namespace.resource.action`
        - The namespace must match one of the OAuth client's authorized namespaces
        - The 'fuelrats' namespace is reserved and cannot be used

        Example: `myapp.notification.create`

        **Authentication Required:** Bearer token authentication (with namespace permissions)
      security:
        - bearerAuth: []
      parameters:
        - name: event
          in: path
          required: true
          description: Event name in format namespace.resource.action
          schema:
            type: string
            pattern: '^[a-z0-9]+\.[a-z0-9]+\.[a-z0-9]+$'
            example: myapp.notification.create
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              description: Custom event data to broadcast
              additionalProperties: true
            example:
              message: New notification
              priority: high
              timestamp: '2023-01-15T10:30:00.000Z'
      responses:
        '204':
          description: Event broadcast successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden - Invalid namespace or insufficient permissions
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - status: '403'
                    title: Forbidden
                    detail: The fuelrats namespace is reserved
                    source:
                      parameter: event
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /web-push:
    post:
      tags:
        - web-push
      summary: Subscribe to web push notifications
      description: |
        Subscribe to receive web push notifications for rescue alerts and system events.

        This endpoint:
        - Registers a web push subscription with the browser's push service
        - Configures platform and expansion filters for relevant notifications
        - Stores encryption keys for secure message delivery
        - Associates the subscription with the authenticated user
        - Enables receiving rescue alerts based on platform preferences

        **Web Push Standard:** This follows the W3C Web Push Protocol specification.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - endpoint
                - keys
              properties:
                endpoint:
                  type: string
                  format: uri
                  description: Push service endpoint URL from the browser
                  example: 'https://fcm.googleapis.com/fcm/send/abc123'
                expirationTime:
                  type: integer
                  nullable: true
                  description: Optional expiration time for the subscription (Unix timestamp)
                  example: 1640995200000
                keys:
                  type: object
                  required:
                    - auth
                    - p256dh
                  description: Encryption keys for secure push message delivery
                  properties:
                    auth:
                      type: string
                      description: Authentication secret (base64url encoded)
                      example: Aw4J4yyK1bOzO8g7vN_g_Q
                    p256dh:
                      type: string
                      description: P-256 ECDH public key (base64url encoded)
                      example: BKsw_uy5sG6Q9_bQ3cZ4v8Nf6Q7wX2sP9zM4kL8nO5tR3
                pc:
                  type: boolean
                  default: true
                  description: Receive notifications for PC platform rescues
                xb:
                  type: boolean
                  default: true
                  description: Receive notifications for Xbox platform rescues
                ps:
                  type: boolean
                  default: true
                  description: Receive notifications for PlayStation platform rescues
                odyssey:
                  type: boolean
                  default: true
                  description: Receive notifications for Odyssey expansion rescues
            example:
              endpoint: 'https://fcm.googleapis.com/fcm/send/abc123def456'
              expirationTime: null
              keys:
                auth: Aw4J4yyK1bOzO8g7vN_g_Q
                p256dh: BKsw_uy5sG6Q9_bQ3cZ4v8Nf6Q7wX2sP9zM4kL8nO5tR3
              pc: true
              xb: false
              ps: false
              odyssey: true
      responses:
        '200':
          description: Web push subscription created successfully
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          description: Invalid subscription data
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_endpoint:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: Push service endpoint is required
                        source:
                          pointer: endpoint
                missing_auth:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: Authentication key is required
                        source:
                          pointer: keys/auth
                missing_p256dh:
                  value:
                    errors:
                      - status: '422'
                        title: Validation Error
                        detail: P256DH key is required
                        source:
                          pointer: keys/p256dh
  /alerts:
    post:
      tags:
        - web-push
      summary: Send web push alert broadcast
      description: |
        Send a web push notification alert to all subscribed users.

        This endpoint:
        - Broadcasts notifications to all registered web push subscriptions
        - Used for system-wide alerts and important announcements
        - Requires rescue write permissions (typically dispatch/admin)
        - Processes notifications asynchronously using worker pools

        **Required Permission:** `rescues.write`

        **Note:** This is typically used internally for rescue alerts, but can be used for custom broadcasts.
      security:
        - bearerAuth:
            - rescues.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Alert data to broadcast to all subscribed users
              properties:
                title:
                  type: string
                  description: Notification title
                  example: Emergency Rescue Alert
                body:
                  type: string
                  description: Notification body text
                  example: Code Red rescue in progress - all available commanders respond
                icon:
                  type: string
                  format: uri
                  description: Optional notification icon URL
                  example: /images/rescue-alert-icon.png
                tag:
                  type: string
                  description: Optional notification tag for grouping
                  example: rescue-alert
                data:
                  type: object
                  description: Custom data payload for the notification
                  additionalProperties: true
                  example:
                    rescueId: 880e8400-e29b-41d4-a716-446655440001
                    platform: pc
                    system: Sol
            example:
              title: Emergency Rescue Alert
              body: Code Red rescue in Sol system - PC commanders needed
              icon: /images/emergency-icon.png
              tag: rescue-alert
              data:
                rescueId: 880e8400-e29b-41d4-a716-446655440001
                platform: pc
                system: Sol
                codeRed: true
      responses:
        '200':
          description: Alert broadcast initiated successfully
          content:
            application/json:
              schema:
                type: boolean
                enum:
                  - true
              example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /:
    get:
      tags:
        - websockets
      summary: WebSocket Connection
      description: |
        Establish a WebSocket connection for real-time API communication.

        **Connection Details:**
        - URL: `wss://api.fuelrats.com/`
        - Protocol: `FR-JSONAPI-WS`
        - Authentication: Bearer token in query parameter

        **Authentication:**
        ```
        wss://api.fuelrats.com/?bearer=<your_access_token>
        ```

        **Request Format:**
        All WebSocket messages follow this array format:
        ```javascript
        [state, endpoint, query, body]
        ```

        - `state`: Unique identifier for tracking requests/responses
        - `endpoint`: Target API endpoint (e.g., "rescues", "users")
        - `query`: Query parameters object
        - `body`: Request body data

        **Response Format:**
        All WebSocket responses follow this array format:
        ```javascript
        [state, status, body]
        ```

        - `state`: Original request state identifier
        - `status`: HTTP status code
        - `body`: Response data (same as REST API)

        **Example Request:**
        ```javascript
        [
          "req_001",
          "rescues",
          { "page": { "limit": 10 } },
          {}
        ]
        ```

        **Example Response:**
        ```javascript
        [
          "req_001",
          200,
          {
            "data": [...],
            "meta": {...},
            "links": {...}
          }
        ]
        ```

        **Event Subscription:**
        Subscribe to real-time events:
        ```javascript
        ["subscribe", "events", "subscribe", {}]
        ```

        **Event Format:**
        Events are broadcast in this format:
        ```javascript
        [event, sender, resourceId, data]
        ```

        - `event`: Event type (e.g., "fuelrats.rescuecreate")
        - `sender`: User who triggered the event
        - `resourceId`: ID of the affected resource
        - `data`: Event data payload

        **Event Broadcasting:**
        Applications with assigned namespaces can broadcast custom events:
        - Maximum message size: 512KiB
        - Cannot use `fuelrats.*` namespaces (reserved)
        - Requires appropriate permissions

        **Error Handling:**
        WebSocket errors follow the same JSON:API error format as REST endpoints:
        ```javascript
        [
          "req_001",
          400,
          {
            "errors": [{
              "id": "ws_error_001",
              "code": "invalid_request",
              "status": "400",
              "title": "Bad Request",
              "detail": "Invalid WebSocket request format"
            }]
          }
        ]
        ```
      parameters:
        - name: bearer
          in: query
          required: true
          description: OAuth2 bearer token for authentication
          schema:
            type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '101':
          description: Switching Protocols - WebSocket connection established
        '400':
          description: Bad Request - Invalid WebSocket request
        '401':
          description: Unauthorized - Invalid or missing bearer token
        '426':
          description: Upgrade Required - WebSocket upgrade failed
  /leaderboard:
    get:
      tags:
        - statistics
      summary: Get rescue leaderboard
      description: |
        Retrieve the rescue leaderboard showing commanders ranked by their rescue statistics.

        **Public Access:** No authentication required

        The leaderboard includes:
        - Successful rescue counts (first limpet only)
        - Code red rescue counts
        - Commander names and platform information
        - Epic and dispatch status
        - Join dates and activity metrics

        Results can be filtered by commander name and support pagination and sorting.
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Sort'
        - name: 'filter[name]'
          in: query
          description: Filter leaderboard by commander name (case-insensitive partial match)
          schema:
            type: string
          example: MyCommander
      responses:
        '200':
          description: Leaderboard data with rescue statistics
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/statisticsLeaderboardCollection'
              example:
                data:
                  - type: leaderboard
                    id: 550e8400-e29b-41d4-a716-446655440001
                    attributes:
                      preferredName: TopRescuer
                      ratNames:
                        - TopRescuer
                        - 'TopRescuer[PC]'
                      joinedAt: '2020-01-15T10:00:00.000Z'
                      rescueCount: 1247
                      codeRedCount: 89
                      isDispatch: true
                      isEpic: true
                  - type: leaderboard
                    id: 550e8400-e29b-41d4-a716-446655440002
                    attributes:
                      preferredName: EliteRescuer
                      ratNames:
                        - EliteRescuer
                        - 'EliteRescuer[XB]'
                      joinedAt: '2020-03-22T14:30:00.000Z'
                      rescueCount: 856
                      codeRedCount: 67
                      isDispatch: false
                      isEpic: true
                meta:
                  page:
                    offset: 0
                    limit: 20
                    total: 1847
                links:
                  self: '/leaderboard?page[offset]=0&page[limit]=20'
                  first: '/leaderboard?page[offset]=0&page[limit]=20'
                  last: '/leaderboard?page[offset]=1840&page[limit]=20'
                  next: '/leaderboard?page[offset]=20&page[limit]=20'
  /version:
    get:
      tags:
        - version
      summary: Get API version
      description: Retrieve the current API version information
      responses:
        '200':
          description: API version information
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: API version number
                    example: 2.10.0
                  commit:
                    type: string
                    description: Git commit hash
                    example: a1b2c3d4
                  timestamp:
                    type: string
                    format: date-time
                    description: Build timestamp
              example:
                version: 2.11.5
                commit: b4cbacb3
                timestamp: '2023-03-01T12:00:00.000Z'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication
    oauth2:
      type: oauth2
      description: OAuth2 authentication for third-party applications
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/token
          scopes:
            users.read: Read any user profiles and information
            users.write: Create and modify any user accounts (admin only)
            users.read.me: Read your own user profile only
            users.write.me: Modify your own user profile only
            rats.read: Read any commander information
            rats.write: Create and modify any commander records
            rats.read.me: Read your own commanders only
            rats.write.me: Create and modify your own commanders only
            rescues.read: Read any rescue data
            rescues.write: Create and modify any rescue cases
            rescues.read.me: Read only rescues you're assigned to
            rescues.write.me: Modify only rescues you're assigned to
            groups.read: Read group information and memberships
            groups.write: Create and modify groups (admin only)
            clients.read: Read OAuth client information
            clients.write: Create and modify OAuth clients
            clients.read.me: Read your own OAuth clients only
            clients.write.me: Modify your own OAuth clients only
            decals.read: Read decal awards and information
            decals.write: Create and award decals (admin only)
            nicknames.read: Read IRC nickname registrations
            nicknames.write: Register and modify IRC nicknames
            nicknames.read.me: Read your own nicknames only
            nicknames.write.me: Modify your own nicknames only
        implicit:
          authorizationUrl: /oauth2/authorize
          scopes:
            users.read.me: Read your own user profile only
            users.write.me: Modify your own user profile only
            rats.read.me: Read your own commanders only
            rats.write.me: Create and modify your own commanders only
            rescues.read.me: Read only rescues you're assigned to
            rescues.write.me: Modify only rescues you're assigned to
            nicknames.read.me: Read your own nicknames only
            nicknames.write.me: Modify your own nicknames only
        password:
          tokenUrl: /oauth2/token
          scopes:
            users.read: Read any user profiles and information
            users.write: Create and modify any user accounts
            rats.read: Read any commander information
            rats.write: Create and modify any commander records
            rescues.read: Read any rescue data
            rescues.write: Create and modify any rescue cases
            groups.read: Read group information and memberships
            groups.write: Create and modify groups
            decals.read: Read decal awards and information
            decals.write: Create and award decals
    basicAuth:
      type: http
      scheme: basic
      description: Basic authentication for legacy endpoints
    sessionAuth:
      type: apiKey
      in: cookie
      name: session
      description: Session-based authentication for OAuth2 flow
  schemas:
    Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - status
              - title
            properties:
              id:
                type: string
                description: Unique identifier for this error instance
              status:
                type: string
                description: HTTP status code as string
                example: '400'
              code:
                type: string
                description: Application-specific error code
              title:
                type: string
                description: 'Short, human-readable summary'
                example: Bad Request
              detail:
                type: string
                description: Human-readable explanation specific to this occurrence
              source:
                type: object
                properties:
                  pointer:
                    type: string
                    description: JSON Pointer to the error location
                    example: /data/attributes/email
                  parameter:
                    type: string
                    description: Query parameter that caused the error
                    example: include
    ResourceIdentifier:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          description: Resource type
        id:
          type: string
          description: Unique resource identifier
    Links:
      type: object
      properties:
        self:
          type: string
          format: uri
          description: Link to the resource itself
        related:
          type: string
          format: uri
          description: Link to related resource
        first:
          type: string
          format: uri
          description: First page of paginated results
        last:
          type: string
          format: uri
          description: Last page of paginated results
        prev:
          type: string
          format: uri
          description: Previous page of paginated results
        next:
          type: string
          format: uri
          description: Next page of paginated results
    Meta:
      type: object
      properties:
        page:
          type: object
          properties:
            offset:
              type: integer
              minimum: 0
              description: Number of resources skipped
            limit:
              type: integer
              minimum: 1
              maximum: 100
              description: Maximum number of resources returned
            total:
              type: integer
              minimum: 0
              description: Total number of available resources
    SingleResourceDocument:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/ResourceIdentifier'
            - type: 'null'
        included:
          type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
          description: Related resources included in the response
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    CollectionDocument:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
        included:
          type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
          description: Related resources included in the response
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    Client:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          enum:
            - clients
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              description: 'Name of the OAuth client application (**Write Permission:** `clients.write` or self-access)'
            redirectUri:
              type: string
              format: uri
              description: 'OAuth redirect URI for authorization code flow (**Write Permission:** `clients.write` or self-access)'
            namespaces:
              type: array
              items:
                type: string
              description: 'OAuth scopes/namespaces this client is allowed to request (**Write Permission:** Admin/sudo only)'
            firstParty:
              type: boolean
              description: 'Whether this is a first-party (official) client (**Write Permission:** Admin/sudo only)'
            secret:
              type: string
              writeOnly: true
              description: 'OAuth client secret (**Write Permission:** Internal system only)'
            createdAt:
              type: string
              format: date-time
              description: 'Creation timestamp (**Write Permission:** Internal system only)'
            updatedAt:
              type: string
              format: date-time
              description: 'Last update timestamp (**Write Permission:** Internal system only)'
        relationships:
          type: object
          properties:
            user:
              type: object
              description: The user who owns this OAuth client
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                    related:
                      type: string
                      format: uri
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
    ClientCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/Client'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        links:
          $ref: '#/components/schemas/PaginationLinks'
    ClientDocument:
      type: object
      properties:
        data:
          $ref: '#/Client'
    Decal:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          enum:
            - decals
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            code:
              type: string
              description: 'Unique decal code (**Write Permission:** Admin/sudo only)'
            type:
              type: string
              enum:
                - rescue
                - epic
                - thisisfine
                - anniversary
              description: 'Type of decal award (**Write Permission:** Admin/sudo only)'
            notes:
              type: string
              description: 'Additional notes about why the decal was awarded (**Write Permission:** Admin/sudo only)'
            createdAt:
              type: string
              format: date-time
              description: 'Creation timestamp (**Write Permission:** Internal system only)'
            updatedAt:
              type: string
              format: date-time
              description: 'Last update timestamp (**Write Permission:** Internal system only)'
            deletedAt:
              type: string
              format: date-time
              nullable: true
              description: 'Deletion timestamp (**Write Permission:** Internal system only)'
        relationships:
          type: object
          properties:
            user:
              type: object
              description: The user who received this decal
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                    related:
                      type: string
                      format: uri
            rat:
              type: object
              description: The rat (commander) associated with this decal
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - rats
                    id:
                      type: string
                      format: uuid
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                    related:
                      type: string
                      format: uri
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
    DecalCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/Decal'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        links:
          $ref: '#/components/schemas/PaginationLinks'
    DecalDocument:
      type: object
      properties:
        data:
          $ref: '#/Decal'
    Group:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - groups
            attributes:
              type: object
              properties:
                name:
                  type: string
                  description: Group name
                vhost:
                  type: string
                  description: 'Virtual host for the group (**Write Permission:** Admin/sudo only)'
                priority:
                  type: integer
                  description: 'Group priority level (**Write Permission:** Admin/sudo only)'
                permissions:
                  type: array
                  items:
                    type: string
                  description: 'List of permissions (**Write Permission:** Admin/sudo only)'
                withoutPrefix:
                  type: boolean
                  description: 'Whether group operates without command prefix (**Write Permission:** Admin/sudo only)'
                isAdministrator:
                  type: boolean
                  description: Administrator privileges
                channels:
                  type: array
                  items:
                    type: string
                  description: 'IRC channels associated with group (**Write Permission:** Admin/sudo only)'
                createdAt:
                  type: string
                  format: date-time
                  description: 'Creation timestamp (**Write Permission:** Internal system only)'
                updatedAt:
                  type: string
                  format: date-time
                  description: 'Last update timestamp (**Write Permission:** Internal system only)'
                deletedAt:
                  type: string
                  format: date-time
                  nullable: true
                  description: 'Deletion timestamp (**Write Permission:** Internal system only)'
            relationships:
              type: object
              properties:
                users:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ResourceIdentifier'
                          - properties:
                              type:
                                enum:
                                  - users
                    links:
                      $ref: '#/components/schemas/Links'
    GroupDocument:
      allOf:
        - $ref: '#/components/schemas/SingleResourceDocument'
        - properties:
            data:
              $ref: '#/Group'
    GroupCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionDocument'
        - properties:
            data:
              type: array
              items:
                $ref: '#/Group'
    Nickname:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - nicknames
            attributes:
              type: object
              properties:
                nick:
                  type: string
                  description: IRC nickname
                email:
                  type: string
                  format: email
                  description: Associated email address
                vhost:
                  type: string
                  description: IRC virtual host
                display:
                  type: string
                  description: Display nickname
                createdAt:
                  type: string
                  format: date-time
                  description: Registration timestamp
                updatedAt:
                  type: string
                  format: date-time
                  description: Last update timestamp
    NicknameDocument:
      allOf:
        - $ref: '#/components/schemas/SingleResourceDocument'
        - properties:
            data:
              $ref: '#/Nickname'
    NicknameCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionDocument'
        - properties:
            data:
              type: array
              items:
                $ref: '#/Nickname'
    AuthorizationRequest:
      type: object
      properties:
        response_type:
          type: string
          enum:
            - code
          description: OAuth2 response type
        client_id:
          type: string
          description: OAuth2 client identifier
        redirect_uri:
          type: string
          format: uri
          description: Redirect URI after authorization
        scope:
          type: string
          description: Requested permissions scope
        state:
          type: string
          description: Client state parameter
    TokenRequest:
      type: object
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
            - refresh_token
            - client_credentials
          description: OAuth2 grant type
        code:
          type: string
          description: Authorization code (for authorization_code grant)
        redirect_uri:
          type: string
          format: uri
          description: Redirect URI (for authorization_code grant)
        refresh_token:
          type: string
          description: Refresh token (for refresh_token grant)
        client_id:
          type: string
          description: OAuth2 client identifier
        client_secret:
          type: string
          description: OAuth2 client secret
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Bearer access token
        token_type:
          type: string
          enum:
            - Bearer
          description: Token type
        expires_in:
          type: integer
          description: Token expiration time in seconds
        refresh_token:
          type: string
          description: Refresh token for obtaining new access tokens
        scope:
          type: string
          description: Granted permissions scope
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          enum:
            - invalid_request
            - invalid_client
            - invalid_grant
            - unauthorized_client
            - unsupported_grant_type
            - invalid_scope
          description: OAuth2 error code
        error_description:
          type: string
          description: Human-readable error description
        error_uri:
          type: string
          format: uri
          description: URI with additional error information
    Passkey:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          enum:
            - passkeys
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              description: 'User-friendly name for the passkey (**Write Permission:** `users.write` or self-access)'
            credentialId:
              type: string
              description: 'Base64URL encoded credential ID (**Write Permission:** Internal system only)'
            publicKey:
              type: string
              writeOnly: true
              description: 'Base64URL encoded public key (**Write Permission:** Internal system only)'
            counter:
              type: integer
              description: 'Signature counter for replay attack prevention (**Write Permission:** Internal system only)'
            backedUp:
              type: boolean
              description: 'Whether the passkey is backed up (e.g., synced via iCloud/Google) (**Write Permission:** Internal system only)'
            createdAt:
              type: string
              format: date-time
              description: 'Creation timestamp (**Write Permission:** Internal system only)'
            updatedAt:
              type: string
              format: date-time
              description: 'Last update timestamp (**Write Permission:** Internal system only)'
        relationships:
          type: object
          properties:
            user:
              type: object
              description: The user who owns this passkey
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    id:
                      type: string
                      format: uuid
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                    related:
                      type: string
                      format: uri
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
    PasskeyCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/Passkey'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        links:
          $ref: '#/components/schemas/PaginationLinks'
    PasskeyDocument:
      type: object
      properties:
        data:
          $ref: '#/Passkey'
    Rat:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - rats
            attributes:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 64
                  description: 'Commander name (**Write Permission:** `rats.write` or self-access)'
                data:
                  type: object
                  description: 'Additional rat metadata (**Write Permission:** `rats.write` or self-access)'
                platform:
                  type: string
                  enum:
                    - pc
                    - xb
                    - ps
                  description: 'Gaming platform (**Write Permission:** `rats.write` or self-access)'
                expansion:
                  type: string
                  enum:
                    - horizons3
                    - horizons4
                    - odyssey
                  description: 'Game expansion (**Write Permission:** `rats.write` or self-access)'
                frontierId:
                  type: integer
                  nullable: true
                  description: 'Frontier account ID (**Write Permission:** Internal system only)'
                createdAt:
                  type: string
                  format: date-time
                  description: 'Creation timestamp (**Write Permission:** Internal system only)'
                updatedAt:
                  type: string
                  format: date-time
                  description: 'Last update timestamp (**Write Permission:** Internal system only)'
                deletedAt:
                  type: string
                  format: date-time
                  nullable: true
                  description: 'Deletion timestamp (**Write Permission:** Internal system only)'
            relationships:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ResourceIdentifier'
                        - properties:
                            type:
                              enum:
                                - users
                    links:
                      $ref: '#/components/schemas/Links'
    RatDocument:
      allOf:
        - $ref: '#/components/schemas/SingleResourceDocument'
        - properties:
            data:
              $ref: '#/Rat'
    RatCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionDocument'
        - properties:
            data:
              type: array
              items:
                $ref: '#/Rat'
    Rescue:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - rescues
            attributes:
              type: object
              properties:
                client:
                  type: string
                  description: 'Client commander name (**Write Permission:** `rescues.write` or assigned to rescue)'
                clientNick:
                  type: string
                  description: 'Client IRC nickname (**Write Permission:** `rescues.write` or assigned to rescue)'
                clientLanguage:
                  type: string
                  description: 'Client preferred language (**Write Permission:** `rescues.write` or assigned to rescue)'
                commandIdentifier:
                  type: string
                  description: 'Rescue case number (**Write Permission:** Admin/sudo only)'
                codeRed:
                  type: boolean
                  description: 'Emergency status (**Write Permission:** `rescues.write` or assigned to rescue)'
                data:
                  type: object
                  description: 'Additional rescue metadata (**Write Permission:** `rescues.write` or assigned to rescue)'
                notes:
                  type: string
                  description: 'Rescue notes (**Write Permission:** `rescues.write` or assigned to rescue)'
                platform:
                  type: string
                  enum:
                    - pc
                    - xb
                    - ps
                  description: 'Gaming platform (**Write Permission:** `rescues.write` or assigned to rescue)'
                expansion:
                  type: string
                  enum:
                    - horizons3
                    - horizons4
                    - odyssey
                  description: 'Game expansion (**Write Permission:** `rescues.write` or assigned to rescue)'
                system:
                  type: string
                  description: 'Star system location (**Write Permission:** `rescues.write` or assigned to rescue)'
                title:
                  type: string
                  description: 'Rescue title/summary (**Write Permission:** Admin/sudo only)'
                unidentifiedRats:
                  type: string
                  description: 'Unidentified commanders involved (**Write Permission:** `rescues.write` or assigned to rescue)'
                status:
                  type: string
                  enum:
                    - open
                    - inactive
                    - closed
                  description: 'Rescue status (**Write Permission:** `rescues.write` or assigned to rescue)'
                outcome:
                  type: string
                  enum:
                    - success
                    - failure
                    - invalid
                    - other
                    - purge
                  description: 'Rescue outcome (**Write Permission:** `rescues.write` or assigned to rescue)'
                quotes:
                  type: array
                  items:
                    type: object
                  description: 'Rescue chat quotes (**Write Permission:** `rescues.write` or assigned to rescue)'
                createdAt:
                  type: string
                  format: date-time
                  description: 'Creation timestamp (**Write Permission:** Internal system only)'
                updatedAt:
                  type: string
                  format: date-time
                  description: 'Last update timestamp (**Write Permission:** Internal system only)'
                deletedAt:
                  type: string
                  format: date-time
                  nullable: true
                  description: 'Deletion timestamp (**Write Permission:** Internal system only)'
            relationships:
              type: object
              properties:
                rats:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ResourceIdentifier'
                          - properties:
                              type:
                                enum:
                                  - rats
                    links:
                      $ref: '#/components/schemas/Links'
                firstLimpet:
                  type: object
                  properties:
                    data:
                      nullable: true
                      allOf:
                        - $ref: '#/components/schemas/ResourceIdentifier'
                        - properties:
                            type:
                              enum:
                                - rats
                    links:
                      $ref: '#/components/schemas/Links'
                epics:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ResourceIdentifier'
                          - properties:
                              type:
                                enum:
                                  - epics
                    links:
                      $ref: '#/components/schemas/Links'
    RescueDocument:
      allOf:
        - $ref: '#/components/schemas/SingleResourceDocument'
        - properties:
            data:
              $ref: '#/Rescue'
    RescueCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionDocument'
        - properties:
            data:
              type: array
              items:
                $ref: '#/Rescue'
    LeaderboardDocument:
      allOf:
        - $ref: ./common.yaml#/Document
        - type: object
          properties:
            data:
              $ref: '#/LeaderboardResource'
    LeaderboardCollection:
      allOf:
        - $ref: ./common.yaml#/Collection
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/LeaderboardResource'
    LeaderboardResource:
      allOf:
        - $ref: ./common.yaml#/Resource
        - type: object
          properties:
            type:
              type: string
              enum:
                - leaderboard
            attributes:
              type: object
              properties:
                preferredName:
                  type: string
                  description: Commander's preferred display name
                ratNames:
                  type: array
                  items:
                    type: string
                  description: All commander names for this user
                joinedAt:
                  type: string
                  format: date-time
                  description: Date when the user first registered
                rescueCount:
                  type: integer
                  description: Total successful rescues as first limpet
                codeRedCount:
                  type: integer
                  description: Total code red rescues as first limpet
                isDispatch:
                  type: boolean
                  description: Whether the user has dispatch privileges
                isEpic:
                  type: boolean
                  description: Whether the user has completed an epic rescue
    UserStatisticsDocument:
      allOf:
        - $ref: ./common.yaml#/Document
        - type: object
          properties:
            data:
              $ref: '#/UserStatisticsResource'
    UserStatisticsCollection:
      allOf:
        - $ref: ./common.yaml#/Collection
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/UserStatisticsResource'
    UserStatisticsResource:
      allOf:
        - $ref: ./common.yaml#/Resource
        - type: object
          properties:
            type:
              type: string
              enum:
                - user-statistics
            attributes:
              type: object
              properties:
                name:
                  type: string
                  description: Commander (rat) name
                codeRed:
                  type: integer
                  description: Code red rescues completed as first limpet
                firstLimpet:
                  type: integer
                  description: Total successful rescues as first limpet
                assists:
                  type: integer
                  description: Successful rescues as assisting rat (not first limpet)
                failure:
                  type: integer
                  description: Failed rescues participated in
                other:
                  type: integer
                  description: Rescues with 'other' outcome
                invalid:
                  type: integer
                  description: Invalid rescues participated in
    User:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            type:
              type: string
              enum:
                - users
            attributes:
              type: object
              properties:
                data:
                  type: object
                  description: 'User metadata (**Write Permission:** `users.write` or self-access)'
                email:
                  type: string
                  format: email
                  description: 'User email address (**Write Permission:** Admin/sudo only)'
                password:
                  type: string
                  writeOnly: true
                  description: 'User password (**Write Permission:** Admin/sudo only)'
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                    - legacy
                    - deactivated
                  description: 'User account status (**Write Permission:** Custom logic - admin can change any status, users can only deactivate their own account)'
                suspended:
                  type: string
                  format: date-time
                  nullable: true
                  description: 'Suspension date if user is suspended (**Write Permission:** Admin/sudo only)'
                stripeId:
                  type: string
                  nullable: true
                  description: 'Stripe customer ID (**Write Permission:** `users.write` or self-access)'
                frontierId:
                  type: string
                  nullable: true
                  description: 'Frontier account ID (**Write Permission:** Internal system only)'
                createdAt:
                  type: string
                  format: date-time
                  description: 'Account creation timestamp (**Write Permission:** Internal system only)'
                updatedAt:
                  type: string
                  format: date-time
                  description: 'Last update timestamp (**Write Permission:** Internal system only)'
                deletedAt:
                  type: string
                  format: date-time
                  nullable: true
                  description: 'Account deletion timestamp (**Write Permission:** Internal system only)'
            relationships:
              type: object
              properties:
                rats:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ResourceIdentifier'
                          - properties:
                              type:
                                enum:
                                  - rats
                    links:
                      $ref: '#/components/schemas/Links'
                groups:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ResourceIdentifier'
                          - properties:
                              type:
                                enum:
                                  - groups
                    links:
                      $ref: '#/components/schemas/Links'
    UserDocument:
      allOf:
        - $ref: '#/components/schemas/SingleResourceDocument'
        - properties:
            data:
              $ref: '#/User'
    UserCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionDocument'
        - properties:
            data:
              type: array
              items:
                $ref: '#/User'
  parameters:
    PageOffset:
      name: 'page[offset]'
      in: query
      description: Number of resources to skip for pagination
      schema:
        type: integer
        minimum: 0
        default: 0
      example: 20
    PageLimit:
      name: 'page[limit]'
      in: query
      description: Maximum number of resources to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 20
    Sort:
      name: sort
      in: query
      description: |
        Sort resources by field(s). Use comma-separated values for multiple fields.
        Prefix with `-` for descending order.
      schema:
        type: string
      examples:
        ascending:
          value: createdAt
          summary: Sort by creation date (ascending)
        descending:
          value: '-createdAt'
          summary: Sort by creation date (descending)
        multiple:
          value: 'name,-createdAt'
          summary: 'Sort by name ascending, then creation date descending'
    Include:
      name: include
      in: query
      description: |
        Include related resources in the response. Use comma-separated values for multiple includes.
      schema:
        type: string
      example: 'rats,groups'
    Filter:
      name: filter
      in: query
      description: |
        Advanced filtering using JSON query objects. URL encode the filter object.

        **Supported Operators:**
        - **Comparison**: `gt`, `gte`, `lt`, `lte`, `eq`, `ne`
        - **Text**: `like`, `iLike`, `substring`, `startsWith`, `regexp`
        - **Logical**: `and`, `or`, `not`
        - **Arrays**: `contains`, `overlap`, `contained`

        **Example**: `{"and":[{"name":{"startsWith":"Commander"}},{"rescueCount":{"gt":10}}]}`
      schema:
        type: string
      examples:
        name_filter:
          summary: Filter by name starting with text
          value: '{"name":{"startsWith":"Commander"}}'
        numeric_comparison:
          summary: Filter by numeric comparison
          value: '{"rescueCount":{"gt":10}}'
        complex_filter:
          summary: Complex filter with multiple conditions
          value: '{"and":[{"platform":"pc"},{"status":"active"}]}'
        text_search:
          summary: Case-insensitive text search
          value: '{"name":{"iLike":"%rescue%"}}'
    Fields:
      name: fields
      in: query
      description: |
        Sparse fieldsets - limit the fields returned for each resource type.
        Format: fields[TYPE]=field1,field2
      schema:
        type: object
        additionalProperties:
          type: string
      style: deepObject
      explode: true
      example:
        users: 'email,status,createdAt'
        rats: 'name,platform'
  responses:
    BadRequest:
      description: Bad Request - Invalid request parameters or malformed request
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            validation_error:
              summary: Validation Error
              description: Request validation failed due to invalid parameters
              value:
                errors:
                  - id: req_abc123def456
                    code: validation_error
                    status: '400'
                    title: Validation Error
                    detail: The request contains invalid parameters
                    source:
                      parameter: include
            malformed_json:
              summary: Malformed JSON
              description: Request body contains invalid JSON
              value:
                errors:
                  - id: req_def456ghi789
                    code: malformed_json
                    status: '400'
                    title: Bad Request
                    detail: The request body contains malformed JSON
                    source:
                      pointer: /data
    Unauthorized:
      description: Unauthorized - Authentication required
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            missing_token:
              summary: Missing Authentication
              description: No authentication token provided
              value:
                errors:
                  - id: auth_no_token_001
                    code: missing_authentication
                    status: '401'
                    title: Unauthorized
                    detail: Authentication is required to access this resource
            invalid_token:
              summary: Invalid Token
              description: Authentication token is invalid or expired
              value:
                errors:
                  - id: auth_invalid_002
                    code: invalid_token
                    status: '401'
                    title: Unauthorized
                    detail: The provided authentication token is invalid or has expired
    Forbidden:
      description: Forbidden - Insufficient privileges
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            insufficient_permissions:
              summary: Insufficient Permissions
              description: User lacks required permissions for this operation
              value:
                errors:
                  - id: perm_insufficient_001
                    code: insufficient_permission
                    status: '403'
                    title: Forbidden
                    detail: You do not have the required permissions to access this resource
                    source:
                      parameter: user_permissions
            resource_access_denied:
              summary: Resource Access Denied
              description: Access to specific resource is denied
              value:
                errors:
                  - id: perm_denied_002
                    code: access_denied
                    status: '403'
                    title: Forbidden
                    detail: Access to this resource is restricted
    NotFound:
      description: Not Found - Resource does not exist
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errors:
              - status: '404'
                title: Not Found
                detail: The requested resource could not be found
    Conflict:
      description: Conflict - Resource already exists or conflicting state
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errors:
              - status: '409'
                title: Conflict
                detail: A resource with this identifier already exists
    UnprocessableEntity:
      description: Unprocessable Entity - Validation errors
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errors:
              - status: '422'
                title: Validation Error
                detail: The email field is required
                source:
                  pointer: /data/attributes/email
